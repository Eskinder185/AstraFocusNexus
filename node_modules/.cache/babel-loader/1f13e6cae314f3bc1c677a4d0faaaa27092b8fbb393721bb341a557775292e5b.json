{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\PomodoroTimer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULTS = {\n  focusMin: 25,\n  shortMin: 5,\n  longMin: 15,\n  cyclesBeforeLong: 4,\n  autoStartNext: true\n};\nfunction format(ms) {\n  const s = Math.max(0, Math.round(ms / 1000));\n  const m = Math.floor(s / 60);\n  const r = s % 60;\n  return `${String(m).padStart(2, \"0\")}:${String(r).padStart(2, \"0\")}`;\n}\n\n/** Try web notification; returns true if a notification was shown */\nasync function tryNotify(title, body) {\n  if (!(\"Notification\" in window)) return false;\n  // If user hasn't decided yet, politely ask\n  if (Notification.permission === \"default\") {\n    try {\n      await Notification.requestPermission();\n    } catch {}\n  }\n  if (Notification.permission === \"granted\") {\n    try {\n      new Notification(title, {\n        body,\n        tag: \"pomodoro\"\n      });\n      return true;\n    } catch {}\n  }\n  return false;\n}\n\n// --- Secondary alert methods (work even if notifications are blocked) ---\nfunction playChime(audioRef) {\n  const a = audioRef.current;\n  if (a) {\n    a.currentTime = 0;\n    a.volume = 1;\n    a.play().catch(() => {\n      // fallback: simple beep\n      try {\n        const Ctx = window.AudioContext || window.webkitAudioContext;\n        const ctx = new Ctx();\n        const osc = ctx.createOscillator();\n        const gain = ctx.createGain();\n        osc.type = \"sine\";\n        osc.frequency.value = 880;\n        osc.connect(gain);\n        gain.connect(ctx.destination);\n        gain.gain.setValueAtTime(0.001, ctx.currentTime);\n        gain.gain.exponentialRampToValueAtTime(0.6, ctx.currentTime + 0.03);\n        osc.start();\n        setTimeout(() => {\n          gain.gain.exponentialRampToValueAtTime(0.0001, ctx.currentTime + 0.25);\n          osc.stop(ctx.currentTime + 0.27);\n        }, 230);\n      } catch {}\n    });\n  }\n}\nfunction vibrate() {\n  if (\"vibrate\" in navigator) {\n    try {\n      navigator.vibrate([200, 100, 200]);\n    } catch {}\n  }\n}\nfunction flashTitleStart(store, handle) {\n  if (handle.current) return;\n  store.current = document.title;\n  let on = false;\n  handle.current = window.setInterval(() => {\n    on = !on;\n    document.title = on ? \"⏰ Pomodoro done!\" : store.current;\n  }, 800);\n}\nfunction flashTitleStop(store, handle) {\n  if (handle.current) {\n    window.clearInterval(handle.current);\n    handle.current = null;\n    document.title = store.current || document.title;\n  }\n}\nconst PomodoroTimer = ({\n  activeTaskTitle,\n  onFocusComplete\n}) => {\n  _s();\n  const [settings, setSettings] = useState(() => {\n    try {\n      const raw = localStorage.getItem(\"pomodoro.settings\");\n      return raw ? {\n        ...DEFAULTS,\n        ...JSON.parse(raw)\n      } : DEFAULTS;\n    } catch {\n      return DEFAULTS;\n    }\n  });\n\n  // session state\n  const [mode, setMode] = useState(\"focus\");\n  const [running, setRunning] = useState(false);\n  const [endAt, setEndAt] = useState(null);\n  const [remaining, setRemaining] = useState(settings.focusMin * 60000);\n  const [cycle, setCycle] = useState(0); // completed focus sessions in current block\n\n  // permission/bell state\n  const [perm, setPerm] = useState(\"default\");\n\n  // refs for secondary alerts\n  const audioRef = useRef(null);\n  const originalTitleRef = useRef(document.title);\n  const flasherRef = useRef(null);\n\n  // persist settings\n  useEffect(() => {\n    localStorage.setItem(\"pomodoro.settings\", JSON.stringify(settings));\n  }, [settings]);\n\n  // init notification permission + tiny inline chime\n  useEffect(() => {\n    if (!(\"Notification\" in window)) setPerm(\"unsupported\");else setPerm(Notification.permission);\n\n    // tiny inline WAV so it works offline (attach to the existing <audio>)\n    try {\n      if (audioRef.current) {\n        audioRef.current.src = \"data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEAESsAACJWAAACABYAAAACAAAAPGZmZmZmZmZm\";\n      }\n    } catch {}\n  }, []);\n\n  // compute target duration for current mode\n  const durationMs = useMemo(() => {\n    if (mode === \"focus\") return settings.focusMin * 60000;\n    if (mode === \"short\") return settings.shortMin * 60000;\n    return settings.longMin * 60000;\n  }, [mode, settings]);\n\n  // keep remaining in sync when mode/duration changes (if not running)\n  useEffect(() => {\n    if (!running) setRemaining(durationMs);\n  }, [durationMs, running]);\n\n  // main ticker\n  useEffect(() => {\n    if (!running || endAt == null) return;\n    const id = window.setInterval(() => {\n      const now = Date.now();\n      const left = endAt - now;\n      setRemaining(left);\n      if (left <= 0) {\n        window.clearInterval(id);\n        setRunning(false);\n        setRemaining(0);\n\n        // session complete\n        (async () => {\n          if (mode === \"focus\") {\n            // 1) Web notification (if allowed)\n            const title = \"Focus complete ✅\";\n            const body = activeTaskTitle ? `Task: ${activeTaskTitle}` : \"Take a break!\";\n            await tryNotify(title, body);\n\n            // 2) Secondary alerts (always try)\n            playChime(audioRef);\n            vibrate();\n            flashTitleStart(originalTitleRef, flasherRef);\n            // auto stop flashing after 20s\n            window.setTimeout(() => flashTitleStop(originalTitleRef, flasherRef), 20000);\n\n            // callback to parent\n            onFocusComplete === null || onFocusComplete === void 0 ? void 0 : onFocusComplete();\n\n            // choose next mode\n            const nextMode = (cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\";\n            setCycle(c => c + 1);\n            setMode(nextMode);\n\n            // prepare next session\n            const nextDur = (nextMode === \"long\" ? settings.longMin : settings.shortMin) * 60000;\n            setRemaining(nextDur);\n            if (settings.autoStartNext) start(nextDur);\n          } else {\n            // Break finished\n            const title = mode === \"short\" ? \"Short break over ☕\" : \"Long break over 🌿\";\n            await tryNotify(title, \"Time to focus again!\");\n            playChime(audioRef);\n            vibrate();\n            flashTitleStart(originalTitleRef, flasherRef);\n            window.setTimeout(() => flashTitleStop(originalTitleRef, flasherRef), 20000);\n            setMode(\"focus\");\n            const nextDur = settings.focusMin * 60000;\n            setRemaining(nextDur);\n            if (settings.autoStartNext) start(nextDur);\n          }\n        })();\n      }\n    }, 250);\n    return () => window.clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [running, endAt, mode, settings, cycle, activeTaskTitle]);\n  const start = (dur = durationMs) => {\n    // If user hasn't made a choice yet, ask once they start\n    if (\"Notification\" in window && Notification.permission === \"default\") {\n      Notification.requestPermission().then(p => setPerm(p));\n    }\n    flashTitleStop(originalTitleRef, flasherRef); // clear any previous flashing\n    setEndAt(Date.now() + dur);\n    setRunning(true);\n    // Fire a start notification (best-effort so users get an immediate cue)\n    tryNotify(mode === \"focus\" ? \"Focus started\" : mode === \"short\" ? \"Short break started\" : \"Long break started\", activeTaskTitle ? `Task: ${activeTaskTitle}` : \"\");\n  };\n  const pause = () => setRunning(false);\n  const reset = () => {\n    setRunning(false);\n    setEndAt(null);\n    setRemaining(durationMs);\n    flashTitleStop(originalTitleRef, flasherRef);\n  };\n  const skip = () => {\n    // force-complete current mode\n    setRunning(false);\n    setRemaining(0);\n    flashTitleStop(originalTitleRef, flasherRef);\n    if (mode === \"focus\") {\n      setCycle(c => c + 1);\n      onFocusComplete === null || onFocusComplete === void 0 ? void 0 : onFocusComplete();\n      const next = (cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\";\n      setMode(next);\n    } else {\n      setMode(\"focus\");\n    }\n    setTimeout(() => {\n      if (settings.autoStartNext) start();else reset();\n    }, 0);\n  };\n  const requestPermission = async () => {\n    if (!(\"Notification\" in window)) return alert(\"Notifications not supported.\");\n    try {\n      const res = await Notification.requestPermission();\n      setPerm(res);\n      if (res !== \"granted\") alert(\"Notifications denied.\");else {\n        // Show a quick test notification so the user can confirm it works\n        await tryNotify(\"Notifications enabled\", \"You'll get alerts at start and end.\");\n      }\n    } catch {\n      alert(\"Could not request notifications.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro__modes\",\n        children: [\"focus\", \"short\", \"long\"].map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pill ${mode === m ? \"active\" : \"\"}`,\n          onClick: () => {\n            setMode(m);\n            setRunning(false);\n            setEndAt(null);\n            flashTitleStop(originalTitleRef, flasherRef);\n          },\n          children: m === \"focus\" ? \"Focus\" : m === \"short\" ? \"Short\" : \"Long\"\n        }, m, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pill\",\n        onClick: requestPermission,\n        title: \"Enable notifications\",\n        disabled: perm === \"unsupported\",\n        children: perm === \"granted\" ? \"🔔\" : \"🔕\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), activeTaskTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__task\",\n      title: \"Active task\",\n      children: [\"\\uD83C\\uDFAF \", activeTaskTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__timer\",\n      children: format(remaining)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__controls\",\n      children: [!running ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => start(),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: pause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: skip,\n        children: \"Skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"pomodoro__settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Focus (min)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.focusMin,\n            onChange: e => setSettings(s => ({\n              ...s,\n              focusMin: +e.target.value || 1\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Short break (min)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.shortMin,\n            onChange: e => setSettings(s => ({\n              ...s,\n              shortMin: +e.target.value || 1\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Long break (min)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.longMin,\n            onChange: e => setSettings(s => ({\n              ...s,\n              longMin: +e.target.value || 1\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cycles before long\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.cyclesBeforeLong,\n            onChange: e => setSettings(s => ({\n              ...s,\n              cyclesBeforeLong: Math.max(1, +e.target.value || 1)\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"rowFlex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: settings.autoStartNext,\n            onChange: e => setSettings(s => ({\n              ...s,\n              autoStartNext: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), \"Auto-start next\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted\",\n          children: [\"Completed in block: \", cycle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"uvCMYKvHX0VPAfakFtF+hIcnOsc=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","DEFAULTS","focusMin","shortMin","longMin","cyclesBeforeLong","autoStartNext","format","ms","s","Math","max","round","m","floor","r","String","padStart","tryNotify","title","body","window","Notification","permission","requestPermission","tag","playChime","audioRef","a","current","currentTime","volume","play","catch","Ctx","AudioContext","webkitAudioContext","ctx","osc","createOscillator","gain","createGain","type","frequency","value","connect","destination","setValueAtTime","exponentialRampToValueAtTime","start","setTimeout","stop","vibrate","navigator","flashTitleStart","store","handle","document","on","setInterval","flashTitleStop","clearInterval","PomodoroTimer","activeTaskTitle","onFocusComplete","_s","settings","setSettings","raw","localStorage","getItem","JSON","parse","mode","setMode","running","setRunning","endAt","setEndAt","remaining","setRemaining","cycle","setCycle","perm","setPerm","originalTitleRef","flasherRef","setItem","stringify","src","durationMs","id","now","Date","left","nextMode","c","nextDur","dur","then","p","pause","reset","skip","next","alert","res","className","children","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","disabled","min","onChange","e","target","checked","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/PomodoroTimer.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\ntype Mode = \"focus\" | \"short\" | \"long\";\r\n\r\nexport interface PomodoroSettings {\r\n  focusMin: number;\r\n  shortMin: number;\r\n  longMin: number;\r\n  cyclesBeforeLong: number;\r\n  autoStartNext: boolean;\r\n}\r\n\r\nconst DEFAULTS: PomodoroSettings = {\r\n  focusMin: 25,\r\n  shortMin: 5,\r\n  longMin: 15,\r\n  cyclesBeforeLong: 4,\r\n  autoStartNext: true,\r\n};\r\n\r\nfunction format(ms: number) {\r\n  const s = Math.max(0, Math.round(ms / 1000));\r\n  const m = Math.floor(s / 60);\r\n  const r = s % 60;\r\n  return `${String(m).padStart(2, \"0\")}:${String(r).padStart(2, \"0\")}`;\r\n}\r\n\r\n/** Try web notification; returns true if a notification was shown */\r\nasync function tryNotify(title: string, body: string) {\r\n  if (!(\"Notification\" in window)) return false;\r\n  // If user hasn't decided yet, politely ask\r\n  if (Notification.permission === \"default\") {\r\n    try { await Notification.requestPermission(); } catch {}\r\n  }\r\n  if (Notification.permission === \"granted\") {\n    try { new Notification(title, { body, tag: \"pomodoro\" }); return true; } catch {}\n  }\n  return false;\r\n}\r\n\r\n// --- Secondary alert methods (work even if notifications are blocked) ---\r\nfunction playChime(audioRef: React.MutableRefObject<HTMLAudioElement | null>) {\r\n  const a = audioRef.current;\r\n  if (a) {\r\n    a.currentTime = 0;\r\n    a.volume = 1;\r\n    a.play().catch(() => {\r\n      // fallback: simple beep\r\n      try {\r\n        const Ctx = (window as any).AudioContext || (window as any).webkitAudioContext;\r\n        const ctx = new Ctx();\r\n        const osc = ctx.createOscillator();\r\n        const gain = ctx.createGain();\r\n        osc.type = \"sine\"; osc.frequency.value = 880;\r\n        osc.connect(gain); gain.connect(ctx.destination);\r\n        gain.gain.setValueAtTime(0.001, ctx.currentTime);\r\n        gain.gain.exponentialRampToValueAtTime(0.6, ctx.currentTime + 0.03);\r\n        osc.start();\r\n        setTimeout(() => {\r\n          gain.gain.exponentialRampToValueAtTime(0.0001, ctx.currentTime + 0.25);\r\n          osc.stop(ctx.currentTime + 0.27);\r\n        }, 230);\r\n      } catch {}\r\n    });\r\n  }\r\n}\r\nfunction vibrate() {\r\n  if (\"vibrate\" in navigator) {\r\n    try { navigator.vibrate([200, 100, 200]); } catch {}\r\n  }\r\n}\r\nfunction flashTitleStart(store: React.MutableRefObject<string>, handle: React.MutableRefObject<number | null>) {\r\n  if (handle.current) return;\r\n  store.current = document.title;\r\n  let on = false;\r\n  handle.current = window.setInterval(() => {\r\n    on = !on;\r\n    document.title = on ? \"⏰ Pomodoro done!\" : store.current;\r\n  }, 800) as unknown as number;\r\n}\r\nfunction flashTitleStop(store: React.MutableRefObject<string>, handle: React.MutableRefObject<number | null>) {\r\n  if (handle.current) {\r\n    window.clearInterval(handle.current);\r\n    handle.current = null;\r\n    document.title = store.current || document.title;\r\n  }\r\n}\r\n\r\ntype Props = {\r\n  activeTaskTitle?: string;\r\n  onFocusComplete?: () => void; // called when a focus session completes\r\n};\r\n\r\nconst PomodoroTimer: React.FC<Props> = ({ activeTaskTitle, onFocusComplete }) => {\r\n  const [settings, setSettings] = useState<PomodoroSettings>(() => {\r\n    try {\r\n      const raw = localStorage.getItem(\"pomodoro.settings\");\r\n      return raw ? { ...DEFAULTS, ...JSON.parse(raw) } : DEFAULTS;\r\n    } catch {\r\n      return DEFAULTS;\r\n    }\r\n  });\r\n\r\n  // session state\r\n  const [mode, setMode] = useState<Mode>(\"focus\");\r\n  const [running, setRunning] = useState(false);\r\n  const [endAt, setEndAt] = useState<number | null>(null);\r\n  const [remaining, setRemaining] = useState<number>(settings.focusMin * 60_000);\r\n  const [cycle, setCycle] = useState<number>(0); // completed focus sessions in current block\r\n\r\n  // permission/bell state\r\n  const [perm, setPerm] = useState<NotificationPermission | \"unsupported\">(\"default\");\r\n\r\n  // refs for secondary alerts\r\n  const audioRef = useRef<HTMLAudioElement | null>(null);\r\n  const originalTitleRef = useRef<string>(document.title);\r\n  const flasherRef = useRef<number | null>(null);\r\n\r\n  // persist settings\r\n  useEffect(() => {\r\n    localStorage.setItem(\"pomodoro.settings\", JSON.stringify(settings));\r\n  }, [settings]);\r\n\r\n  // init notification permission + tiny inline chime\r\n  useEffect(() => {\r\n    if (!(\"Notification\" in window)) setPerm(\"unsupported\");\r\n    else setPerm(Notification.permission);\r\n\r\n    // tiny inline WAV so it works offline (attach to the existing <audio>)\n    try {\n      if (audioRef.current) {\n        audioRef.current.src =\n          \"data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEAESsAACJWAAACABYAAAACAAAAPGZmZmZmZmZm\";\n      }\n    } catch {}\n  }, []);\n\r\n  // compute target duration for current mode\r\n  const durationMs = useMemo(() => {\r\n    if (mode === \"focus\") return settings.focusMin * 60_000;\r\n    if (mode === \"short\") return settings.shortMin * 60_000;\r\n    return settings.longMin * 60_000;\r\n  }, [mode, settings]);\r\n\r\n  // keep remaining in sync when mode/duration changes (if not running)\r\n  useEffect(() => {\r\n    if (!running) setRemaining(durationMs);\r\n  }, [durationMs, running]);\r\n\r\n  // main ticker\r\n  useEffect(() => {\r\n    if (!running || endAt == null) return;\r\n\r\n    const id = window.setInterval(() => {\r\n      const now = Date.now();\r\n      const left = endAt - now;\r\n      setRemaining(left);\r\n      if (left <= 0) {\r\n        window.clearInterval(id);\r\n        setRunning(false);\r\n        setRemaining(0);\r\n\r\n        // session complete\r\n        (async () => {\r\n          if (mode === \"focus\") {\r\n            // 1) Web notification (if allowed)\r\n            const title = \"Focus complete ✅\";\r\n            const body = activeTaskTitle ? `Task: ${activeTaskTitle}` : \"Take a break!\";\r\n            await tryNotify(title, body);\n\r\n            // 2) Secondary alerts (always try)\r\n            playChime(audioRef);\r\n            vibrate();\r\n            flashTitleStart(originalTitleRef, flasherRef);\r\n            // auto stop flashing after 20s\r\n            window.setTimeout(() => flashTitleStop(originalTitleRef, flasherRef), 20_000);\r\n\r\n            // callback to parent\r\n            onFocusComplete?.();\r\n\r\n            // choose next mode\r\n            const nextMode =\r\n              (cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\";\r\n            setCycle((c) => c + 1);\r\n            setMode(nextMode);\r\n\r\n            // prepare next session\r\n            const nextDur = (nextMode === \"long\" ? settings.longMin : settings.shortMin) * 60_000;\r\n            setRemaining(nextDur);\r\n            if (settings.autoStartNext) start(nextDur);\r\n          } else {\r\n            // Break finished\r\n            const title = mode === \"short\" ? \"Short break over ☕\" : \"Long break over 🌿\";\r\n            await tryNotify(title, \"Time to focus again!\");\r\n            playChime(audioRef);\r\n            vibrate();\r\n            flashTitleStart(originalTitleRef, flasherRef);\r\n            window.setTimeout(() => flashTitleStop(originalTitleRef, flasherRef), 20_000);\r\n\r\n            setMode(\"focus\");\r\n            const nextDur = settings.focusMin * 60_000;\r\n            setRemaining(nextDur);\r\n            if (settings.autoStartNext) start(nextDur);\r\n          }\r\n        })();\r\n      }\r\n    }, 250);\r\n\r\n    return () => window.clearInterval(id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [running, endAt, mode, settings, cycle, activeTaskTitle]);\r\n\r\n  const start = (dur = durationMs) => {\r\n    // If user hasn't made a choice yet, ask once they start\r\n    if (\"Notification\" in window && Notification.permission === \"default\") {\r\n      Notification.requestPermission().then((p) => setPerm(p));\r\n    }\r\n    flashTitleStop(originalTitleRef, flasherRef); // clear any previous flashing\n    setEndAt(Date.now() + dur);\n    setRunning(true);\n    // Fire a start notification (best-effort so users get an immediate cue)\n    tryNotify(\n      mode === \"focus\" ? \"Focus started\" : mode === \"short\" ? \"Short break started\" : \"Long break started\",\n      activeTaskTitle ? `Task: ${activeTaskTitle}` : \"\"\n    );\n  };\n  const pause = () => setRunning(false);\r\n  const reset = () => {\r\n    setRunning(false);\r\n    setEndAt(null);\r\n    setRemaining(durationMs);\r\n    flashTitleStop(originalTitleRef, flasherRef);\r\n  };\r\n  const skip = () => {\r\n    // force-complete current mode\r\n    setRunning(false);\r\n    setRemaining(0);\r\n    flashTitleStop(originalTitleRef, flasherRef);\r\n\r\n    if (mode === \"focus\") {\r\n      setCycle((c) => c + 1);\r\n      onFocusComplete?.();\r\n      const next = (cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\";\r\n      setMode(next);\r\n    } else {\r\n      setMode(\"focus\");\r\n    }\r\n    setTimeout(() => {\r\n      if (settings.autoStartNext) start();\r\n      else reset();\r\n    }, 0);\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    if (!(\"Notification\" in window)) return alert(\"Notifications not supported.\");\r\n    try {\r\n      const res = await Notification.requestPermission();\n      setPerm(res);\n      if (res !== \"granted\") alert(\"Notifications denied.\");\n      else {\n        // Show a quick test notification so the user can confirm it works\n        await tryNotify(\"Notifications enabled\", \"You'll get alerts at start and end.\");\n      }\n    } catch {\r\n      alert(\"Could not request notifications.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pomodoro\">\r\n      {/* hidden audio for chime */}\r\n      <audio ref={audioRef} style={{ display: \"none\" }} />\r\n\r\n      <div className=\"pomodoro__head\">\r\n        <div className=\"pomodoro__modes\">\r\n          {([\"focus\", \"short\", \"long\"] as Mode[]).map((m) => (\r\n            <button\r\n              key={m}\r\n              className={`pill ${mode === m ? \"active\" : \"\"}`}\r\n              onClick={() => {\r\n                setMode(m);\r\n                setRunning(false);\r\n                setEndAt(null);\r\n                flashTitleStop(originalTitleRef, flasherRef);\r\n              }}\r\n            >\r\n              {m === \"focus\" ? \"Focus\" : m === \"short\" ? \"Short\" : \"Long\"}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Bell shows state: 🔕 (not granted) / 🔔 (granted) */}\r\n        <button className=\"pill\" onClick={requestPermission} title=\"Enable notifications\" disabled={perm === \"unsupported\"}>\n          {perm === \"granted\" ? \"🔔\" : \"🔕\"}\r\n        </button>\r\n      </div>\r\n\r\n      {activeTaskTitle && (\r\n        <div className=\"pomodoro__task\" title=\"Active task\">\r\n          🎯 {activeTaskTitle}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"pomodoro__timer\">{format(remaining)}</div>\r\n\r\n      <div className=\"pomodoro__controls\">\r\n        {!running ? (\r\n          <button className=\"btn\" onClick={() => start()}>Start</button>\r\n        ) : (\r\n          <button className=\"btn\" onClick={pause}>Pause</button>\r\n        )}\r\n        <button className=\"btn\" onClick={reset}>Reset</button>\r\n        <button className=\"btn\" onClick={skip}>Skip</button>\r\n      </div>\r\n\r\n      <details className=\"pomodoro__settings\">\r\n        <summary>Settings</summary>\r\n        <div className=\"grid2\">\r\n          <label>Focus (min)\r\n            <input type=\"number\" min={1}\r\n              value={settings.focusMin}\r\n              onChange={(e) => setSettings(s => ({...s, focusMin: +e.target.value || 1}))}/>\r\n          </label>\r\n          <label>Short break (min)\r\n            <input type=\"number\" min={1}\r\n              value={settings.shortMin}\r\n              onChange={(e) => setSettings(s => ({...s, shortMin: +e.target.value || 1}))}/>\r\n          </label>\r\n          <label>Long break (min)\r\n            <input type=\"number\" min={1}\r\n              value={settings.longMin}\r\n              onChange={(e) => setSettings(s => ({...s, longMin: +e.target.value || 1}))}/>\r\n          </label>\r\n          <label>Cycles before long\r\n            <input type=\"number\" min={1}\r\n              value={settings.cyclesBeforeLong}\r\n              onChange={(e) => setSettings(s => ({...s, cyclesBeforeLong: Math.max(1, +e.target.value || 1)}))}/>\r\n          </label>\r\n          <label className=\"rowFlex\">\r\n            <input type=\"checkbox\"\r\n              checked={settings.autoStartNext}\r\n              onChange={(e) => setSettings(s => ({...s, autoStartNext: e.target.checked}))}/>\r\n              Auto-start next\r\n          </label>\r\n          <div className=\"muted\">Completed in block: {cycle}</div>\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}