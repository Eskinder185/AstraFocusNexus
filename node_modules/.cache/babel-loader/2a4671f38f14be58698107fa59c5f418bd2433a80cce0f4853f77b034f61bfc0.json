{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\PomodoroTimer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULTS = {\n  focusMin: 25,\n  shortMin: 5,\n  longMin: 15,\n  cyclesBeforeLong: 4,\n  autoStartNext: true\n};\nfunction format(ms) {\n  const s = Math.max(0, Math.round(ms / 1000));\n  const m = Math.floor(s / 60);\n  const r = s % 60;\n  return `${String(m).padStart(2, \"0\")}:${String(r).padStart(2, \"0\")}`;\n}\nfunction notify(title, body) {\n  if (!(\"Notification\" in window)) return;\n  if (Notification.permission === \"granted\") {\n    new Notification(title, {\n      body\n    });\n  }\n}\nconst PomodoroTimer = ({\n  activeTaskTitle,\n  onFocusComplete\n}) => {\n  _s();\n  const [settings, setSettings] = useState(() => {\n    try {\n      const raw = localStorage.getItem(\"pomodoro.settings\");\n      return raw ? {\n        ...DEFAULTS,\n        ...JSON.parse(raw)\n      } : DEFAULTS;\n    } catch {\n      return DEFAULTS;\n    }\n  });\n\n  // session state\n  const [mode, setMode] = useState(\"focus\");\n  const [running, setRunning] = useState(false);\n  const [endAt, setEndAt] = useState(null);\n  const [remaining, setRemaining] = useState(settings.focusMin * 60000);\n  const [cycle, setCycle] = useState(0); // completed focus sessions in current block\n\n  // persist settings\n  useEffect(() => {\n    localStorage.setItem(\"pomodoro.settings\", JSON.stringify(settings));\n  }, [settings]);\n\n  // compute target duration for current mode\n  const durationMs = useMemo(() => {\n    if (mode === \"focus\") return settings.focusMin * 60000;\n    if (mode === \"short\") return settings.shortMin * 60000;\n    return settings.longMin * 60000;\n  }, [mode, settings]);\n\n  // keep remaining in sync when mode/duration changes (if not running)\n  useEffect(() => {\n    if (!running) setRemaining(durationMs);\n  }, [durationMs, running]);\n\n  // main ticker\n  useEffect(() => {\n    if (!running) return;\n    if (endAt == null) return;\n    const id = window.setInterval(() => {\n      const now = Date.now();\n      const left = endAt - now;\n      setRemaining(left);\n      if (left <= 0) {\n        window.clearInterval(id);\n        setRunning(false);\n        setRemaining(0);\n\n        // session complete\n        if (mode === \"focus\") {\n          notify(\"Focus complete âœ…\", activeTaskTitle ? `Task: ${activeTaskTitle}` : \"Take a break!\");\n          setCycle(c => c + 1);\n          onFocusComplete === null || onFocusComplete === void 0 ? void 0 : onFocusComplete();\n          // choose next mode\n          const nextMode = (cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\";\n          setMode(nextMode);\n        } else {\n          notify(mode === \"short\" ? \"Short break over â˜•\" : \"Long break over ðŸŒ¿\", \"Time to focus again!\");\n          setMode(\"focus\");\n        }\n\n        // prepare next session\n        const nextDur = mode === \"focus\" ? ((cycle + 1) % settings.cyclesBeforeLong === 0 ? settings.longMin : settings.shortMin) * 60000 : settings.focusMin * 60000;\n        setRemaining(nextDur);\n        if (settings.autoStartNext) start(nextDur);\n      }\n    }, 250);\n    return () => window.clearInterval(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [running, endAt, mode, settings, cycle, activeTaskTitle]);\n  const start = (dur = durationMs) => {\n    setEndAt(Date.now() + dur);\n    setRunning(true);\n  };\n  const pause = () => setRunning(false);\n  const reset = () => {\n    setRunning(false);\n    setEndAt(null);\n    setRemaining(durationMs);\n  };\n  const skip = () => {\n    // force-complete current mode\n    setRunning(false);\n    setRemaining(0);\n    if (mode === \"focus\") {\n      setCycle(c => c + 1);\n      onFocusComplete === null || onFocusComplete === void 0 ? void 0 : onFocusComplete();\n      setMode((cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\");\n    } else {\n      setMode(\"focus\");\n    }\n    setTimeout(() => {\n      // prepare next session time\n      if (settings.autoStartNext) start();else reset();\n    }, 0);\n  };\n  const requestPermission = async () => {\n    if (!(\"Notification\" in window)) return alert(\"Notifications not supported.\");\n    const res = await Notification.requestPermission();\n    if (res !== \"granted\") alert(\"Notifications denied.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomodoro\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__head\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro__modes\",\n        children: [\"focus\", \"short\", \"long\"].map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pill ${mode === m ? \"active\" : \"\"}`,\n          onClick: () => {\n            setMode(m);\n            setRunning(false);\n            setEndAt(null);\n          },\n          children: m === \"focus\" ? \"Focus\" : m === \"short\" ? \"Short\" : \"Long\"\n        }, m, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pill\",\n        onClick: requestPermission,\n        children: \"\\uD83D\\uDD14\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), activeTaskTitle && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__task\",\n      title: \"Active task\",\n      children: [\"\\uD83C\\uDFAF \", activeTaskTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__timer\",\n      children: format(remaining)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro__controls\",\n      children: [!running ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => start(),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: pause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: skip,\n        children: \"Skip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n      className: \"pomodoro__settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Focus (min)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.focusMin,\n            onChange: e => setSettings(s => ({\n              ...s,\n              focusMin: +e.target.value || 1\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Short break (min)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.shortMin,\n            onChange: e => setSettings(s => ({\n              ...s,\n              shortMin: +e.target.value || 1\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Long break (min)\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.longMin,\n            onChange: e => setSettings(s => ({\n              ...s,\n              longMin: +e.target.value || 1\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Cycles before long\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 1,\n            value: settings.cyclesBeforeLong,\n            onChange: e => setSettings(s => ({\n              ...s,\n              cyclesBeforeLong: Math.max(1, +e.target.value || 1)\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"rowFlex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: settings.autoStartNext,\n            onChange: e => setSettings(s => ({\n              ...s,\n              autoStartNext: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), \"Auto-start next\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted\",\n          children: [\"Completed in block: \", cycle]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"ga3zuOlodkNE+yVeKChMpQE4nVU=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","jsxDEV","_jsxDEV","DEFAULTS","focusMin","shortMin","longMin","cyclesBeforeLong","autoStartNext","format","ms","s","Math","max","round","m","floor","r","String","padStart","notify","title","body","window","Notification","permission","PomodoroTimer","activeTaskTitle","onFocusComplete","_s","settings","setSettings","raw","localStorage","getItem","JSON","parse","mode","setMode","running","setRunning","endAt","setEndAt","remaining","setRemaining","cycle","setCycle","setItem","stringify","durationMs","id","setInterval","now","Date","left","clearInterval","c","nextMode","nextDur","start","dur","pause","reset","skip","setTimeout","requestPermission","alert","res","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","value","onChange","e","target","checked","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/PomodoroTimer.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\ntype Mode = \"focus\" | \"short\" | \"long\";\r\n\r\nexport interface PomodoroSettings {\r\n  focusMin: number;\r\n  shortMin: number;\r\n  longMin: number;\r\n  cyclesBeforeLong: number;\r\n  autoStartNext: boolean;\r\n}\r\n\r\nconst DEFAULTS: PomodoroSettings = {\r\n  focusMin: 25,\r\n  shortMin: 5,\r\n  longMin: 15,\r\n  cyclesBeforeLong: 4,\r\n  autoStartNext: true,\r\n};\r\n\r\nfunction format(ms: number) {\r\n  const s = Math.max(0, Math.round(ms / 1000));\r\n  const m = Math.floor(s / 60);\r\n  const r = s % 60;\r\n  return `${String(m).padStart(2, \"0\")}:${String(r).padStart(2, \"0\")}`;\r\n}\r\n\r\nfunction notify(title: string, body: string) {\r\n  if (!(\"Notification\" in window)) return;\r\n  if (Notification.permission === \"granted\") {\r\n    new Notification(title, { body });\r\n  }\r\n}\r\n\r\ntype Props = {\r\n  activeTaskTitle?: string;\r\n  onFocusComplete?: () => void; // called when a focus session completes\r\n};\r\n\r\nconst PomodoroTimer: React.FC<Props> = ({ activeTaskTitle, onFocusComplete }) => {\r\n  const [settings, setSettings] = useState<PomodoroSettings>(() => {\r\n    try {\r\n      const raw = localStorage.getItem(\"pomodoro.settings\");\r\n      return raw ? { ...DEFAULTS, ...JSON.parse(raw) } : DEFAULTS;\r\n    } catch {\r\n      return DEFAULTS;\r\n    }\r\n  });\r\n\r\n  // session state\r\n  const [mode, setMode] = useState<Mode>(\"focus\");\r\n  const [running, setRunning] = useState(false);\r\n  const [endAt, setEndAt] = useState<number | null>(null);\r\n  const [remaining, setRemaining] = useState<number>(\r\n    settings.focusMin * 60_000\r\n  );\r\n  const [cycle, setCycle] = useState<number>(0); // completed focus sessions in current block\r\n\r\n  // persist settings\r\n  useEffect(() => {\r\n    localStorage.setItem(\"pomodoro.settings\", JSON.stringify(settings));\r\n  }, [settings]);\r\n\r\n  // compute target duration for current mode\r\n  const durationMs = useMemo(() => {\r\n    if (mode === \"focus\") return settings.focusMin * 60_000;\r\n    if (mode === \"short\") return settings.shortMin * 60_000;\r\n    return settings.longMin * 60_000;\r\n  }, [mode, settings]);\r\n\r\n  // keep remaining in sync when mode/duration changes (if not running)\r\n  useEffect(() => {\r\n    if (!running) setRemaining(durationMs);\r\n  }, [durationMs, running]);\r\n\r\n  // main ticker\r\n  useEffect(() => {\r\n    if (!running) return;\r\n    if (endAt == null) return;\r\n\r\n    const id = window.setInterval(() => {\r\n      const now = Date.now();\r\n      const left = endAt - now;\r\n      setRemaining(left);\r\n      if (left <= 0) {\r\n        window.clearInterval(id);\r\n        setRunning(false);\r\n        setRemaining(0);\r\n\r\n        // session complete\r\n        if (mode === \"focus\") {\r\n          notify(\"Focus complete âœ…\", activeTaskTitle ? `Task: ${activeTaskTitle}` : \"Take a break!\");\r\n          setCycle((c) => c + 1);\r\n          onFocusComplete?.();\r\n          // choose next mode\r\n          const nextMode =\r\n            (cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\";\r\n          setMode(nextMode);\r\n        } else {\r\n          notify(\r\n            mode === \"short\" ? \"Short break over â˜•\" : \"Long break over ðŸŒ¿\",\r\n            \"Time to focus again!\"\r\n          );\r\n          setMode(\"focus\");\r\n        }\r\n\r\n        // prepare next session\r\n        const nextDur =\r\n          mode === \"focus\"\r\n            ? (( (cycle + 1) % settings.cyclesBeforeLong === 0 ) ? settings.longMin : settings.shortMin) * 60_000\r\n            : settings.focusMin * 60_000;\r\n\r\n        setRemaining(nextDur);\r\n        if (settings.autoStartNext) start(nextDur);\r\n      }\r\n    }, 250);\r\n\r\n    return () => window.clearInterval(id);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [running, endAt, mode, settings, cycle, activeTaskTitle]);\r\n\r\n  const start = (dur = durationMs) => {\r\n    setEndAt(Date.now() + dur);\r\n    setRunning(true);\r\n  };\r\n  const pause = () => setRunning(false);\r\n  const reset = () => {\r\n    setRunning(false);\r\n    setEndAt(null);\r\n    setRemaining(durationMs);\r\n  };\r\n  const skip = () => {\r\n    // force-complete current mode\r\n    setRunning(false);\r\n    setRemaining(0);\r\n    if (mode === \"focus\") {\r\n      setCycle((c) => c + 1);\r\n      onFocusComplete?.();\r\n      setMode((cycle + 1) % settings.cyclesBeforeLong === 0 ? \"long\" : \"short\");\r\n    } else {\r\n      setMode(\"focus\");\r\n    }\r\n    setTimeout(() => {\r\n      // prepare next session time\r\n      if (settings.autoStartNext) start();\r\n      else reset();\r\n    }, 0);\r\n  };\r\n\r\n  const requestPermission = async () => {\r\n    if (!(\"Notification\" in window)) return alert(\"Notifications not supported.\");\r\n    const res = await Notification.requestPermission();\r\n    if (res !== \"granted\") alert(\"Notifications denied.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"pomodoro\">\r\n      <div className=\"pomodoro__head\">\r\n        <div className=\"pomodoro__modes\">\r\n          {([\"focus\", \"short\", \"long\"] as Mode[]).map((m) => (\r\n            <button\r\n              key={m}\r\n              className={`pill ${mode === m ? \"active\" : \"\"}`}\r\n              onClick={() => {\r\n                setMode(m);\r\n                setRunning(false);\r\n                setEndAt(null);\r\n              }}\r\n            >\r\n              {m === \"focus\" ? \"Focus\" : m === \"short\" ? \"Short\" : \"Long\"}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <button className=\"pill\" onClick={requestPermission}>ðŸ””</button>\r\n      </div>\r\n\r\n      {activeTaskTitle && (\r\n        <div className=\"pomodoro__task\" title=\"Active task\">\r\n          ðŸŽ¯ {activeTaskTitle}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"pomodoro__timer\">{format(remaining)}</div>\r\n\r\n      <div className=\"pomodoro__controls\">\r\n        {!running ? (\r\n          <button className=\"btn\" onClick={() => start()}>Start</button>\r\n        ) : (\r\n          <button className=\"btn\" onClick={pause}>Pause</button>\r\n        )}\r\n        <button className=\"btn\" onClick={reset}>Reset</button>\r\n        <button className=\"btn\" onClick={skip}>Skip</button>\r\n      </div>\r\n\r\n      <details className=\"pomodoro__settings\">\r\n        <summary>Settings</summary>\r\n        <div className=\"grid2\">\r\n          <label>Focus (min)\r\n            <input type=\"number\" min={1}\r\n              value={settings.focusMin}\r\n              onChange={(e) => setSettings(s => ({...s, focusMin: +e.target.value || 1}))}/>\r\n          </label>\r\n          <label>Short break (min)\r\n            <input type=\"number\" min={1}\r\n              value={settings.shortMin}\r\n              onChange={(e) => setSettings(s => ({...s, shortMin: +e.target.value || 1}))}/>\r\n          </label>\r\n          <label>Long break (min)\r\n            <input type=\"number\" min={1}\r\n              value={settings.longMin}\r\n              onChange={(e) => setSettings(s => ({...s, longMin: +e.target.value || 1}))}/>\r\n          </label>\r\n          <label>Cycles before long\r\n            <input type=\"number\" min={1}\r\n              value={settings.cyclesBeforeLong}\r\n              onChange={(e) => setSettings(s => ({...s, cyclesBeforeLong: Math.max(1, +e.target.value || 1)}))}/>\r\n          </label>\r\n          <label className=\"rowFlex\">\r\n            <input type=\"checkbox\"\r\n              checked={settings.autoStartNext}\r\n              onChange={(e) => setSettings(s => ({...s, autoStartNext: e.target.checked}))}/>\r\n              Auto-start next\r\n          </label>\r\n          <div className=\"muted\">Completed in block: {cycle}</div>\r\n        </div>\r\n      </details>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}