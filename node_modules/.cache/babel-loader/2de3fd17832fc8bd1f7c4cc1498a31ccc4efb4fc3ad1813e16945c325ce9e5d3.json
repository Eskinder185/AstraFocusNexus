{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\PomodoroTimer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/**\n * Enhanced Pomodoro with end-of-session alerts:\n *  - Web Notification (if granted)\n *  - PLUS: chime sound, optional vibration, and flashing document.title\n */\nconst PomodoroTimer = ({\n  activeTaskTitle,\n  onFocusComplete\n}) => {\n  _s();\n  // Basic 25:00 Focus and 5:00 Break (simple toggle)\n  const [isRunning, setIsRunning] = useState(false);\n  const [isFocus, setIsFocus] = useState(true);\n  const [secondsLeft, setSecondsLeft] = useState(25 * 60); // focus default\n  const [customMinutes, setCustomMinutes] = useState(25);\n  const intervalRef = useRef(null);\n  const originalTitleRef = useRef(document.title);\n  const flasherRef = useRef(null);\n  const audioRef = useRef(null);\n\n  // Initialize a chime sound (base64 WAV) so it works offline\n  useEffect(() => {\n    const audio = new Audio(\"data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEAESsAACJWAAACABYAAAACAAAAPGZmZmZmZmZm\"); // tiny blip\n    // If autoplay is blocked, it will still play on user-initiated events (start/stop)\n    audioRef.current = audio;\n  }, []);\n\n  // Keep seconds in sync when changing custom minutes while idle\n  useEffect(() => {\n    if (!isRunning) {\n      setSecondsLeft((customMinutes || 25) * 60);\n    }\n  }, [customMinutes, isRunning]);\n  useEffect(() => {\n    if (!isRunning) return;\n    intervalRef.current = window.setInterval(() => {\n      setSecondsLeft(s => {\n        if (s > 0) return s - 1;\n        // Session finished\n        window.clearInterval(intervalRef.current);\n        intervalRef.current = null;\n        setIsRunning(false);\n        handleSessionComplete();\n        return 0;\n      });\n    }, 1000);\n    return () => {\n      if (intervalRef.current) {\n        window.clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isRunning]);\n  const mmss = useMemo(() => {\n    const m = Math.floor(secondsLeft / 60).toString().padStart(2, \"0\");\n    const s = (secondsLeft % 60).toString().padStart(2, \"0\");\n    return `${m}:${s}`;\n  }, [secondsLeft]);\n  function start() {\n    if (secondsLeft <= 0) {\n      // if timer at zero, reset based on current mode\n      setSecondsLeft((isFocus ? customMinutes || 25 : 5) * 60);\n    }\n    setIsRunning(true);\n  }\n  function pause() {\n    setIsRunning(false);\n  }\n  function reset() {\n    setIsRunning(false);\n    setSecondsLeft((isFocus ? customMinutes || 25 : 5) * 60);\n    stopFlashing();\n    document.title = originalTitleRef.current;\n  }\n  async function notifyViaWeb() {\n    if (!(\"Notification\" in window)) return;\n    if (Notification.permission === \"default\") {\n      try {\n        await Notification.requestPermission();\n      } catch {}\n    }\n    if (Notification.permission === \"granted\") {\n      const title = isFocus ? \"Focus complete ⏰\" : \"Break complete ✅\";\n      const body = activeTaskTitle ? `Task: ${activeTaskTitle}` : \"Pomodoro session finished.\";\n      try {\n        new Notification(title, {\n          body,\n          tag: \"pomodoro-complete\"\n        });\n      } catch {}\n    }\n  }\n  function playChime() {\n    // Try <audio> first; fallback to Web Audio API\n    const a = audioRef.current;\n    if (a) {\n      a.currentTime = 0;\n      a.volume = 1;\n      a.play().catch(() => {\n        // Fallback: Web Audio oscillator\n        try {\n          const ctx = new (window.AudioContext || window.webkitAudioContext)();\n          const o = ctx.createOscillator();\n          const g = ctx.createGain();\n          o.type = \"sine\";\n          o.frequency.value = 880; // A5\n          o.connect(g);\n          g.connect(ctx.destination);\n          g.gain.setValueAtTime(0.001, ctx.currentTime);\n          g.gain.exponentialRampToValueAtTime(0.5, ctx.currentTime + 0.02);\n          o.start();\n          setTimeout(() => {\n            g.gain.exponentialRampToValueAtTime(0.0001, ctx.currentTime + 0.3);\n            o.stop(ctx.currentTime + 0.32);\n          }, 300);\n        } catch {}\n      });\n    }\n  }\n  function vibrate() {\n    if (\"vibrate\" in navigator) {\n      try {\n        navigator.vibrate([200, 100, 200]);\n      } catch {}\n    }\n  }\n  function flashTitle() {\n    stopFlashing();\n    const base = document.title;\n    originalTitleRef.current = base;\n    let on = false;\n    flasherRef.current = window.setInterval(() => {\n      on = !on;\n      document.title = on ? \"⏰ Pomodoro done!\" : base;\n    }, 800);\n    // auto stop after ~20s\n    window.setTimeout(() => stopFlashing(), 20000);\n  }\n  function stopFlashing() {\n    if (flasherRef.current) {\n      window.clearInterval(flasherRef.current);\n      flasherRef.current = null;\n      document.title = originalTitleRef.current;\n    }\n  }\n  function nextMode() {\n    const nextIsFocus = !isFocus;\n    setIsFocus(nextIsFocus);\n    setSecondsLeft((nextIsFocus ? customMinutes || 25 : 5) * 60);\n  }\n  async function handleSessionComplete() {\n    // Fire both: Web Notification + (sound + vibes + title flash)\n    await notifyViaWeb(); // popup if allowed\n    playChime(); // sound\n    vibrate(); // device haptic if supported\n    flashTitle(); // visual attention on the tab\n\n    // External callback\n    try {\n      onFocusComplete && onFocusComplete();\n    } catch {}\n\n    // Switch mode after alerting\n    nextMode();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pomo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomo__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomo__mode\",\n        children: isFocus ? \"Focus\" : \"Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomo__time\",\n        \"aria-live\": \"polite\",\n        children: mmss\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomo__controls\",\n      children: [!isRunning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: start,\n        \"aria-label\": \"Start timer\",\n        children: \"\\u25B6 Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: pause,\n        \"aria-label\": \"Pause timer\",\n        children: \"\\u23F8 Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pill\",\n        onClick: reset,\n        \"aria-label\": \"Reset timer\",\n        children: \"\\u21BA Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pill\",\n        onClick: nextMode,\n        \"aria-label\": \"Switch mode\",\n        children: isFocus ? \"→ Break\" : \"→ Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"pomo__mins\",\n        children: [\"Focus (min):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 5,\n          max: 120,\n          value: customMinutes,\n          onChange: e => setCustomMinutes(Math.max(5, Math.min(120, Number(e.target.value) || 25))),\n          style: {\n            width: 64,\n            marginLeft: 6\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), activeTaskTitle ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"muted\",\n      style: {\n        marginTop: 8\n      },\n      children: [\"Working on: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: activeTaskTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"N6ZV3sOiWidbpS5jRC26hbFfO7Q=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","PomodoroTimer","activeTaskTitle","onFocusComplete","_s","isRunning","setIsRunning","isFocus","setIsFocus","secondsLeft","setSecondsLeft","customMinutes","setCustomMinutes","intervalRef","originalTitleRef","document","title","flasherRef","audioRef","audio","Audio","current","window","setInterval","s","clearInterval","handleSessionComplete","mmss","m","Math","floor","toString","padStart","start","pause","reset","stopFlashing","notifyViaWeb","Notification","permission","requestPermission","body","tag","playChime","a","currentTime","volume","play","catch","ctx","AudioContext","webkitAudioContext","o","createOscillator","g","createGain","type","frequency","value","connect","destination","gain","setValueAtTime","exponentialRampToValueAtTime","setTimeout","stop","vibrate","navigator","flashTitle","base","on","nextMode","nextIsFocus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","min","max","onChange","e","Number","target","style","width","marginLeft","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/PomodoroTimer.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\n\ninterface PomodoroProps {\n  /** Optional: shown in the card header / notification text */\n  activeTaskTitle?: string | null;\n  /** Called when a focus session completes */\n  onFocusComplete?: () => void;\n}\n\n/**\n * Enhanced Pomodoro with end-of-session alerts:\n *  - Web Notification (if granted)\n *  - PLUS: chime sound, optional vibration, and flashing document.title\n */\nconst PomodoroTimer: React.FC<PomodoroProps> = ({ activeTaskTitle, onFocusComplete }) => {\n  // Basic 25:00 Focus and 5:00 Break (simple toggle)\n  const [isRunning, setIsRunning] = useState(false);\n  const [isFocus, setIsFocus] = useState(true);\n  const [secondsLeft, setSecondsLeft] = useState(25 * 60); // focus default\n  const [customMinutes, setCustomMinutes] = useState<number>(25);\n\n  const intervalRef = useRef<number | null>(null);\n  const originalTitleRef = useRef<string>(document.title);\n  const flasherRef = useRef<number | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  // Initialize a chime sound (base64 WAV) so it works offline\n  useEffect(() => {\n    const audio = new Audio(\"data:audio/wav;base64,UklGRiQAAABXQVZFZm10IBAAAAABAAEAESsAACJWAAACABYAAAACAAAAPGZmZmZmZmZm\"); // tiny blip\n    // If autoplay is blocked, it will still play on user-initiated events (start/stop)\n    audioRef.current = audio;\n  }, []);\n\n  // Keep seconds in sync when changing custom minutes while idle\n  useEffect(() => {\n    if (!isRunning) {\n      setSecondsLeft((customMinutes || 25) * 60);\n    }\n  }, [customMinutes, isRunning]);\n\n  useEffect(() => {\n    if (!isRunning) return;\n    intervalRef.current = window.setInterval(() => {\n      setSecondsLeft((s) => {\n        if (s > 0) return s - 1;\n        // Session finished\n        window.clearInterval(intervalRef.current!);\n        intervalRef.current = null;\n        setIsRunning(false);\n        handleSessionComplete();\n        return 0;\n      });\n    }, 1000) as unknown as number;\n    return () => { if (intervalRef.current) { window.clearInterval(intervalRef.current); intervalRef.current = null; } };\n  }, [isRunning]);\n\n  const mmss = useMemo(() => {\n    const m = Math.floor(secondsLeft / 60).toString().padStart(2, \"0\");\n    const s = (secondsLeft % 60).toString().padStart(2, \"0\");\n    return `${m}:${s}`;\n  }, [secondsLeft]);\n\n  function start() {\n    if (secondsLeft <= 0) {\n      // if timer at zero, reset based on current mode\n      setSecondsLeft((isFocus ? customMinutes || 25 : 5) * 60);\n    }\n    setIsRunning(true);\n  }\n\n  function pause() {\n    setIsRunning(false);\n  }\n\n  function reset() {\n    setIsRunning(false);\n    setSecondsLeft((isFocus ? customMinutes || 25 : 5) * 60);\n    stopFlashing();\n    document.title = originalTitleRef.current;\n  }\n\n  async function notifyViaWeb() {\n    if (!(\"Notification\" in window)) return;\n    if (Notification.permission === \"default\") {\n      try {\n        await Notification.requestPermission();\n      } catch {}\n    }\n    if (Notification.permission === \"granted\") {\n      const title = isFocus ? \"Focus complete ⏰\" : \"Break complete ✅\";\n      const body = activeTaskTitle ? `Task: ${activeTaskTitle}` : \"Pomodoro session finished.\";\n      try {\n        new Notification(title, { body, tag: \"pomodoro-complete\" });\n      } catch {}\n    }\n  }\n\n  function playChime() {\n    // Try <audio> first; fallback to Web Audio API\n    const a = audioRef.current;\n    if (a) {\n      a.currentTime = 0;\n      a.volume = 1;\n      a.play().catch(() => {\n        // Fallback: Web Audio oscillator\n        try {\n          const ctx = new (window.AudioContext || (window as any).webkitAudioContext)();\n          const o = ctx.createOscillator();\n          const g = ctx.createGain();\n          o.type = \"sine\";\n          o.frequency.value = 880; // A5\n          o.connect(g); g.connect(ctx.destination);\n          g.gain.setValueAtTime(0.001, ctx.currentTime);\n          g.gain.exponentialRampToValueAtTime(0.5, ctx.currentTime + 0.02);\n          o.start();\n          setTimeout(() => { g.gain.exponentialRampToValueAtTime(0.0001, ctx.currentTime + 0.3); o.stop(ctx.currentTime + 0.32); }, 300);\n        } catch {}\n      });\n    }\n  }\n\n  function vibrate() {\n    if (\"vibrate\" in navigator) {\n      try { navigator.vibrate([200, 100, 200]); } catch {}\n    }\n  }\n\n  function flashTitle() {\n    stopFlashing();\n    const base = document.title;\n    originalTitleRef.current = base;\n    let on = false;\n    flasherRef.current = window.setInterval(() => {\n      on = !on;\n      document.title = on ? \"⏰ Pomodoro done!\" : base;\n    }, 800) as unknown as number;\n    // auto stop after ~20s\n    window.setTimeout(() => stopFlashing(), 20_000);\n  }\n\n  function stopFlashing() {\n    if (flasherRef.current) {\n      window.clearInterval(flasherRef.current);\n      flasherRef.current = null;\n      document.title = originalTitleRef.current;\n    }\n  }\n\n  function nextMode() {\n    const nextIsFocus = !isFocus;\n    setIsFocus(nextIsFocus);\n    setSecondsLeft((nextIsFocus ? customMinutes || 25 : 5) * 60);\n  }\n\n  async function handleSessionComplete() {\n    // Fire both: Web Notification + (sound + vibes + title flash)\n    await notifyViaWeb();   // popup if allowed\n    playChime();            // sound\n    vibrate();              // device haptic if supported\n    flashTitle();           // visual attention on the tab\n\n    // External callback\n    try { onFocusComplete && onFocusComplete(); } catch {}\n\n    // Switch mode after alerting\n    nextMode();\n  }\n\n  return (\n    <div className=\"pomo\">\n      <div className=\"pomo__top\">\n        <div className=\"pomo__mode\">{isFocus ? \"Focus\" : \"Break\"}</div>\n        <div className=\"pomo__time\" aria-live=\"polite\">{mmss}</div>\n      </div>\n\n      <div className=\"pomo__controls\">\n        {!isRunning ? (\n          <button className=\"btn\" onClick={start} aria-label=\"Start timer\">▶ Start</button>\n        ) : (\n          <button className=\"btn\" onClick={pause} aria-label=\"Pause timer\">⏸ Pause</button>\n        )}\n        <button className=\"pill\" onClick={reset} aria-label=\"Reset timer\">↺ Reset</button>\n        <button className=\"pill\" onClick={nextMode} aria-label=\"Switch mode\">{isFocus ? \"→ Break\" : \"→ Focus\"}</button>\n\n        <label className=\"pomo__mins\">\n          Focus (min):\n          <input\n            type=\"number\"\n            min={5}\n            max={120}\n            value={customMinutes}\n            onChange={(e) => setCustomMinutes(Math.max(5, Math.min(120, Number(e.target.value) || 25)))}\n            style={{ width: 64, marginLeft: 6 }}\n          />\n        </label>\n      </div>\n\n      {activeTaskTitle ? (\n        <div className=\"muted\" style={{ marginTop: 8 }}>\n          Working on: <strong>{activeTaskTitle}</strong>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PomodoroTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}