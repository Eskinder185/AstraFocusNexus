{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport PomodoroTimer from \"./PomodoroTimer\";\nimport LiveBackground from \"./LiveBackground\";\n\n// ===== Types (inline to avoid extra files)\n\n// Eisenhower\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// ===== Storage keys\nconst TASKS_KEY = \"task-tracker.tasks.v4\";\nconst GOALS_KEY = \"task-tracker.goals.v1\";\nconst GOAL_PREF_KEY = \"task-tracker.goalPref\";\nconst WELLNESS_PREFIX = \"wellness.entry.\"; // wellness.entry.YYYY-MM-DD\n\nfunction todayKey() {\n  const d = new Date();\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(d.getDate()).padStart(2, \"0\");\n  return `${WELLNESS_PREFIX}${yyyy}-${mm}-${dd}`;\n}\nconst App = () => {\n  _s();\n  var _tasks$find;\n  // ===== Core state\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [dueAt, setDueAt] = useState(\"\");\n  const [remind, setRemind] = useState(false);\n  const [filter, setFilter] = useState(\"all\");\n  const [activeTaskId, setActiveTaskId] = useState(null);\n\n  // ===== Phase 1: Wellness\n  const [mood, setMood] = useState(3); // 1..5\n  const [stress, setStress] = useState(3); // 0..10\n\n  // ===== Phase 2: Goals + Priority\n  const [goals, setGoals] = useState([]);\n  const [goalTitle, setGoalTitle] = useState(\"\");\n  const [goalEmoji, setGoalEmoji] = useState(\"🎯\");\n  const [goalPref, setGoalPref] = useState(null); // attach new tasks to this goal\n  const [priorityPref, setPriorityPref] = useState(\"UI\");\n\n  // ===== Load from storage\n  useEffect(() => {\n    const raw = localStorage.getItem(TASKS_KEY);\n    if (raw) {\n      try {\n        setTasks(JSON.parse(raw));\n      } catch {}\n    }\n    const graw = localStorage.getItem(GOALS_KEY);\n    if (graw) {\n      try {\n        setGoals(JSON.parse(graw));\n      } catch {}\n    }\n    const gpref = localStorage.getItem(GOAL_PREF_KEY);\n    if (gpref) {\n      try {\n        setGoalPref(JSON.parse(gpref));\n      } catch {}\n    }\n    // wellness\n    const w = localStorage.getItem(todayKey());\n    if (w) {\n      try {\n        const obj = JSON.parse(w);\n        if (typeof obj.mood === \"number\") setMood(obj.mood);\n        if (typeof obj.stress === \"number\") setStress(obj.stress);\n      } catch {}\n    }\n  }, []);\n\n  // ===== Persist\n  useEffect(() => {\n    localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem(GOALS_KEY, JSON.stringify(goals));\n  }, [goals]);\n  useEffect(() => {\n    localStorage.setItem(GOAL_PREF_KEY, JSON.stringify(goalPref));\n  }, [goalPref]);\n  useEffect(() => {\n    const k = todayKey();\n    localStorage.setItem(k, JSON.stringify({\n      date: k.replace(WELLNESS_PREFIX, \"\"),\n      mood,\n      stress\n    }));\n  }, [mood, stress]);\n\n  // ===== Phase 1: Gentle nudge after ~50 minutes of continuous activity\n  const lastActiveRef = useRef(Date.now());\n  useEffect(() => {\n    const onActive = () => lastActiveRef.current = Date.now();\n    window.addEventListener(\"mousemove\", onActive);\n    window.addEventListener(\"keydown\", onActive);\n    window.addEventListener(\"click\", onActive);\n    const iv = window.setInterval(() => {\n      const since = Date.now() - lastActiveRef.current;\n      const limit = 50 * 60000; // 50 minutes\n      if (since >= limit) {\n        alert(\"Break time ⏸️ You’ve been focused ~50 minutes. Take 5 to recharge?\");\n        lastActiveRef.current = Date.now();\n      }\n    }, 30000);\n    return () => {\n      window.clearInterval(iv);\n      window.removeEventListener(\"mousemove\", onActive);\n      window.removeEventListener(\"keydown\", onActive);\n      window.removeEventListener(\"click\", onActive);\n    };\n  }, []);\n\n  // ===== Add task with goal + priority\n  const addTask = () => {\n    const text = input.trim();\n    if (!text) return;\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: Date.now(),\n      dueAt: dueAt || undefined,\n      remind: remind || false,\n      notified: false,\n      pomos: 0,\n      priority: priorityPref,\n      goalId: goalPref !== null && goalPref !== void 0 ? goalPref : null\n    };\n    setTasks(prev => [newTask, ...prev]);\n    setInput(\"\");\n    setDueAt(\"\");\n    setRemind(false);\n  };\n\n  // ===== Task actions\n  const toggleTask = id => {\n    setTasks(prev => prev.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  const removeTask = id => {\n    setTasks(prev => prev.filter(t => t.id !== id));\n    if (activeTaskId === id) setActiveTaskId(null);\n  };\n  const clearCompleted = () => {\n    setTasks(prev => prev.filter(t => !t.completed));\n  };\n  const setTaskPriority = (id, p) => {\n    setTasks(prev => prev.map(t => t.id === id ? {\n      ...t,\n      priority: p\n    } : t));\n  };\n\n  // ===== Derivations\n  const remaining = useMemo(() => tasks.filter(t => !t.completed).length, [tasks]);\n  const filteredTasks = useMemo(() => {\n    if (filter === \"active\") return tasks.filter(t => !t.completed);\n    if (filter === \"completed\") return tasks.filter(t => t.completed);\n    return tasks;\n  }, [tasks, filter]);\n\n  // ===== Notifications for due tasks\n  const requestPermission = async () => {\n    if (!(\"Notification\" in window)) {\n      alert(\"Notifications are not supported in this browser.\");\n      return;\n    }\n    const perm = await Notification.requestPermission();\n    if (perm !== \"granted\") alert(\"Notification permission denied.\");\n  };\n  const showReminder = task => {\n    if (!(\"Notification\" in window)) return;\n    if (Notification.permission !== \"granted\") return;\n    new Notification(\"Task Reminder ⏰\", {\n      body: task.text,\n      tag: String(task.id)\n    });\n  };\n  useEffect(() => {\n    const tick = () => {\n      const now = Date.now();\n      let changed = false;\n      const next = tasks.map(t => {\n        if (!t.remind || t.notified || !t.dueAt) return t;\n        const due = Date.parse(t.dueAt);\n        if (!isNaN(due) && now >= due) {\n          showReminder(t);\n          changed = true;\n          return {\n            ...t,\n            notified: true\n          };\n        }\n        return t;\n      });\n      if (changed) setTasks(next);\n    };\n    const id = window.setInterval(tick, 30000);\n    tick();\n    return () => window.clearInterval(id);\n  }, [tasks]);\n\n  // ===== Pomodoro link\n  const handleFocusComplete = () => {\n    if (activeTaskId == null) return;\n    setTasks(prev => prev.map(t => {\n      var _t$pomos;\n      return t.id === activeTaskId ? {\n        ...t,\n        pomos: ((_t$pomos = t.pomos) !== null && _t$pomos !== void 0 ? _t$pomos : 0) + 1\n      } : t;\n    }));\n  };\n  const activeTaskTitle = (_tasks$find = tasks.find(t => t.id === activeTaskId)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.text;\n\n  // ===== Wellness suggestion\n  const wellnessSuggestion = useMemo(() => {\n    if (stress >= 7) return \"You're under a lot of stress. Break a big task into 3 tiny steps and take a 5-minute walk.\";\n    if (mood <= 2) return \"Be kind to yourself. Pick one small, important task and celebrate finishing it.\";\n    if (mood >= 4 && stress <= 3) return \"Great energy! Line up your top 3 important tasks and enter Focus mode.\";\n    return \"Keep steady. Do one small step, then check in again.\";\n  }, [mood, stress]);\n\n  // ===== Goals helpers\n  const addGoal = () => {\n    const title = goalTitle.trim();\n    if (!title) return;\n    const g = {\n      id: Date.now(),\n      title,\n      emoji: goalEmoji\n    };\n    setGoals(prev => [...prev, g]);\n    setGoalTitle(\"\");\n  };\n  const progressByGoal = useMemo(() => {\n    const map = new Map();\n    for (const t of tasks) {\n      var _map$get;\n      if (t.goalId == null) continue;\n      const v = (_map$get = map.get(t.goalId)) !== null && _map$get !== void 0 ? _map$get : {\n        total: 0,\n        done: 0\n      };\n      v.total += 1;\n      if (t.completed) v.done += 1;\n      map.set(t.goalId, v);\n    }\n    return map;\n  }, [tasks]);\n\n  // ===== Matrix view helper\n  const labels = {\n    UI: \"Urgent + Important\",\n    UN: \"Urgent + Not Important\",\n    NI: \"Not Urgent + Important\",\n    NN: \"Not Urgent + Not Important\"\n  };\n  const quadrants = [\"UI\", \"UN\", \"NI\", \"NN\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LiveBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"brand\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand__logo\",\n        children: [\"AstraFocus \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Nexus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"brand__tag\",\n        children: \"Define \\u2022 Do \\u2022 Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [\"Task Tracker \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge\",\n          children: \"\\u2705\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Wellness check-in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 16,\n            alignItems: \"center\",\n            flexWrap: \"wrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 12,\n                opacity: 0.8,\n                marginBottom: 6\n              },\n              children: \"Mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                gap: 8\n              },\n              children: [1, 2, 3, 4, 5].map(v => {\n                const emoji = [\"😟\", \"🙁\", \"😐\", \"🙂\", \"😄\"][v - 1];\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"emoji-btn\",\n                  \"aria-label\": `Mood ${v}`,\n                  onClick: () => setMood(v),\n                  style: {\n                    border: mood === v ? \"2px solid var(--accent)\" : \"1px solid rgba(255,255,255,.12)\"\n                  },\n                  children: emoji\n                }, v, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              minWidth: 220\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: 12,\n                opacity: 0.8,\n                marginBottom: 6\n              },\n              children: [\"Stress: \", stress, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: 0,\n              max: 10,\n              value: stress,\n              onChange: e => setStress(Number(e.target.value)),\n              style: {\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tip\",\n          style: {\n            marginTop: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Suggestion:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), \" \", wellnessSuggestion]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), stress >= 7 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          style: {\n            marginTop: 12\n          },\n          onClick: () => {\n            const t = tasks.find(t => !t.completed);\n            if (t) {\n              alert(`Try this: Write 3 micro-steps for \"${t.text}\" and do the first in 2 minutes.`);\n            } else {\n              alert(\"Add a task first, then break it into 3 micro-steps.\");\n            }\n          },\n          children: \"Break down my current task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Personal goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: 8,\n            flexWrap: \"wrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: goalEmoji,\n            onChange: e => setGoalEmoji(e.target.value),\n            children: [\"🎯\", \"🏋️\", \"📚\", \"💼\", \"💵\", \"🧘\", \"🧠\", \"💡\", \"❤️\", \"🏃\"].map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: e,\n              children: e\n            }, e, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            placeholder: \"Add a new goal (e.g., Stronger body)\",\n            value: goalTitle,\n            onChange: e => setGoalTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: addGoal,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muted\",\n          style: {\n            marginTop: 8\n          },\n          children: \"No goals yet. Add one, then link tasks to it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"goals\",\n          children: goals.map(g => {\n            var _progressByGoal$get, _g$emoji;\n            const prog = (_progressByGoal$get = progressByGoal.get(g.id)) !== null && _progressByGoal$get !== void 0 ? _progressByGoal$get : {\n              total: 0,\n              done: 0\n            };\n            const pct = prog.total ? Math.round(prog.done / prog.total * 100) : 0;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"goal-emoji\",\n                children: (_g$emoji = g.emoji) !== null && _g$emoji !== void 0 ? _g$emoji : \"🎯\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"goal-title\",\n                children: g.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"fill\",\n                  style: {\n                    width: `${pct}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"goal-stat\",\n                children: [prog.done, \"/\", prog.total]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"pill\",\n                onClick: () => setGoalPref(g.id),\n                title: \"Attach new tasks to this goal\",\n                children: \"Use for new tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this)]\n            }, g.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row card\",\n        style: {\n          gap: 8,\n          flexWrap: \"wrap\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"text\",\n          value: input,\n          placeholder: \"Enter a task\",\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && addTask()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          style: {\n            minWidth: 220\n          },\n          type: \"datetime-local\",\n          value: dueAt,\n          onChange: e => setDueAt(e.target.value),\n          title: \"Due date & time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 6\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: remind,\n            onChange: e => setRemind(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), \"Remind me\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 6\n          },\n          children: [\"Priority:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: priorityPref,\n            onChange: e => setPriorityPref(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UI\",\n              children: \"Urgent + Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"UN\",\n              children: \"Urgent + Not Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"NI\",\n              children: \"Not Urgent + Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"NN\",\n              children: \"Not Urgent + Not Important\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: addTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: requestPermission,\n          children: \"Enable Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Pomodoro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PomodoroTimer, {\n          activeTaskTitle: activeTaskTitle,\n          onFocusComplete: handleFocusComplete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `chip ${filter === \"all\" ? \"active\" : \"\"}`,\n            onClick: () => setFilter(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `chip ${filter === \"active\" ? \"active\" : \"\"}`,\n            onClick: () => setFilter(\"active\"),\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `chip ${filter === \"completed\" ? \"active\" : \"\"}`,\n            onClick: () => setFilter(\"completed\"),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `chip ${filter === \"matrix\" ? \"active\" : \"\"}`,\n            onClick: () => setFilter(\"matrix\"),\n            children: \"Matrix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [remaining, \" left\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"link\",\n            onClick: clearCompleted,\n            disabled: tasks.every(t => !t.completed),\n            children: \"Clear completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), filter !== \"matrix\" ? filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty\",\n        children: \"No tasks here yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: filteredTasks.map(task => {\n          var _task$priority;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed,\n              onChange: () => toggleTask(task.id),\n              title: \"Toggle complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text ${task.completed ? \"done\" : \"\"}`,\n              children: [task.text, task.dueAt && /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  marginLeft: 8,\n                  color: \"#475569\"\n                },\n                children: [\"(due \", new Date(task.dueAt).toLocaleString(), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 23\n              }, this), task.remind && !task.notified && /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \" \\u2022 will remind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 55\n              }, this), task.remind && task.notified && /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \" \\u2022 reminded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 54\n              }, this), typeof task.pomos === \"number\" && task.pomos > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n                style: {\n                  marginLeft: 8,\n                  color: \"#475569\"\n                },\n                children: [\"\\u2022 \", task.pomos, \" pomos\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: (_task$priority = task.priority) !== null && _task$priority !== void 0 ? _task$priority : \"NN\",\n              onChange: e => setTaskPriority(task.id, e.target.value),\n              title: \"Eisenhower priority\",\n              style: {\n                marginRight: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"UI\",\n                children: \"UI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"UN\",\n                children: \"UN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NI\",\n                children: \"NI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NN\",\n                children: \"NN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `pill ${activeTaskId === task.id ? \"active\" : \"\"}`,\n              onClick: () => setActiveTaskId(activeTaskId === task.id ? null : task.id),\n              title: \"Set as active for Pomodoro\",\n              children: \"\\uD83C\\uDFAF Focus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"icon\",\n              onClick: () => removeTask(task.id),\n              \"aria-label\": \"Delete\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matrix\",\n        children: quadrants.map(q => {\n          const items = tasks.filter(t => {\n            var _t$priority;\n            return ((_t$priority = t.priority) !== null && _t$priority !== void 0 ? _t$priority : \"NN\") === q;\n          });\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"matrix-cell\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"matrix-title\",\n              children: labels[q]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list\",\n              style: {\n                marginTop: 6\n              },\n              children: items.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text muted\",\n                  children: \"No tasks.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 23\n              }, this) : items.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: t.completed,\n                  onChange: () => toggleTask(t.id),\n                  title: \"Toggle complete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `text ${t.completed ? \"done\" : \"\"}`,\n                  children: t.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 27\n                }, this), !t.completed && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\",\n                    gap: 6,\n                    alignItems: \"center\",\n                    marginLeft: \"auto\"\n                  },\n                  children: quadrants.map(opt => {\n                    var _t$priority2;\n                    return /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: `pill ${((_t$priority2 = t.priority) !== null && _t$priority2 !== void 0 ? _t$priority2 : \"NN\") === opt && \"active\" || \"\"}`,\n                      onClick: () => setTaskPriority(t.id, opt),\n                      title: labels[opt],\n                      children: opt\n                    }, opt, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 543,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 29\n                }, this)]\n              }, t.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this)]\n          }, q, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"s1WJWtQXQBlirRYoOhrQnqz8nBU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","PomodoroTimer","LiveBackground","jsxDEV","_jsxDEV","Fragment","_Fragment","TASKS_KEY","GOALS_KEY","GOAL_PREF_KEY","WELLNESS_PREFIX","todayKey","d","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","App","_s","_tasks$find","tasks","setTasks","input","setInput","dueAt","setDueAt","remind","setRemind","filter","setFilter","activeTaskId","setActiveTaskId","mood","setMood","stress","setStress","goals","setGoals","goalTitle","setGoalTitle","goalEmoji","setGoalEmoji","goalPref","setGoalPref","priorityPref","setPriorityPref","raw","localStorage","getItem","JSON","parse","graw","gpref","w","obj","setItem","stringify","k","date","replace","lastActiveRef","now","onActive","current","window","addEventListener","iv","setInterval","since","limit","alert","clearInterval","removeEventListener","addTask","text","trim","newTask","id","completed","createdAt","undefined","notified","pomos","priority","goalId","prev","toggleTask","map","t","removeTask","clearCompleted","setTaskPriority","p","remaining","length","filteredTasks","requestPermission","perm","Notification","showReminder","task","permission","body","tag","tick","changed","next","due","isNaN","handleFocusComplete","_t$pomos","activeTaskTitle","find","wellnessSuggestion","addGoal","title","g","emoji","progressByGoal","Map","_map$get","v","get","total","done","set","labels","UI","UN","NI","NN","quadrants","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginTop","display","gap","alignItems","flexWrap","fontSize","opacity","marginBottom","onClick","border","minWidth","type","min","max","value","onChange","e","Number","target","width","placeholder","_progressByGoal$get","_g$emoji","prog","pct","Math","round","onKeyDown","key","checked","onFocusComplete","disabled","every","_task$priority","marginLeft","color","toLocaleString","marginRight","q","items","_t$priority","opt","_t$priority2","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/App.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport PomodoroTimer from \"./PomodoroTimer\";\nimport LiveBackground from \"./LiveBackground\";\n\n// ===== Types (inline to avoid extra files)\ntype Filter = \"all\" | \"active\" | \"completed\" | \"matrix\";\ntype Priority = \"UI\" | \"UN\" | \"NI\" | \"NN\"; // Eisenhower\ninterface Task {\n  id: number;\n  text: string;\n  completed: boolean;\n  createdAt: number;\n  dueAt?: string;\n  remind?: boolean;\n  notified?: boolean;\n  pomos?: number;\n  // Phase 2\n  priority?: Priority;\n  goalId?: number | null;\n}\ninterface Goal {\n  id: number;\n  title: string;\n  emoji?: string;\n}\n\n// ===== Storage keys\nconst TASKS_KEY = \"task-tracker.tasks.v4\";\nconst GOALS_KEY = \"task-tracker.goals.v1\";\nconst GOAL_PREF_KEY = \"task-tracker.goalPref\";\nconst WELLNESS_PREFIX = \"wellness.entry.\"; // wellness.entry.YYYY-MM-DD\n\nfunction todayKey() {\n  const d = new Date();\n  const yyyy = d.getFullYear();\n  const mm = String(d.getMonth() + 1).padStart(2, \"0\");\n  const dd = String(d.getDate()).padStart(2, \"0\");\n  return `${WELLNESS_PREFIX}${yyyy}-${mm}-${dd}`;\n}\n\nconst App: React.FC = () => {\n  // ===== Core state\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [dueAt, setDueAt] = useState<string>(\"\");\n  const [remind, setRemind] = useState<boolean>(false);\n  const [filter, setFilter] = useState<Filter>(\"all\");\n  const [activeTaskId, setActiveTaskId] = useState<number | null>(null);\n\n  // ===== Phase 1: Wellness\n  const [mood, setMood] = useState<number>(3);    // 1..5\n  const [stress, setStress] = useState<number>(3); // 0..10\n\n  // ===== Phase 2: Goals + Priority\n  const [goals, setGoals] = useState<Goal[]>([]);\n  const [goalTitle, setGoalTitle] = useState(\"\");\n  const [goalEmoji, setGoalEmoji] = useState(\"🎯\");\n  const [goalPref, setGoalPref] = useState<number | null>(null); // attach new tasks to this goal\n  const [priorityPref, setPriorityPref] = useState<Priority>(\"UI\");\n\n  // ===== Load from storage\n  useEffect(() => {\n    const raw = localStorage.getItem(TASKS_KEY);\n    if (raw) {\n      try {\n        setTasks(JSON.parse(raw));\n      } catch {}\n    }\n    const graw = localStorage.getItem(GOALS_KEY);\n    if (graw) {\n      try {\n        setGoals(JSON.parse(graw));\n      } catch {}\n    }\n    const gpref = localStorage.getItem(GOAL_PREF_KEY);\n    if (gpref) {\n      try {\n        setGoalPref(JSON.parse(gpref));\n      } catch {}\n    }\n    // wellness\n    const w = localStorage.getItem(todayKey());\n    if (w) {\n      try {\n        const obj = JSON.parse(w);\n        if (typeof obj.mood === \"number\") setMood(obj.mood);\n        if (typeof obj.stress === \"number\") setStress(obj.stress);\n      } catch {}\n    }\n  }, []);\n\n  // ===== Persist\n  useEffect(() => {\n    localStorage.setItem(TASKS_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n  useEffect(() => {\n    localStorage.setItem(GOALS_KEY, JSON.stringify(goals));\n  }, [goals]);\n  useEffect(() => {\n    localStorage.setItem(GOAL_PREF_KEY, JSON.stringify(goalPref));\n  }, [goalPref]);\n  useEffect(() => {\n    const k = todayKey();\n    localStorage.setItem(\n      k,\n      JSON.stringify({ date: k.replace(WELLNESS_PREFIX, \"\"), mood, stress })\n    );\n  }, [mood, stress]);\n\n  // ===== Phase 1: Gentle nudge after ~50 minutes of continuous activity\n  const lastActiveRef = useRef<number>(Date.now());\n  useEffect(() => {\n    const onActive = () => (lastActiveRef.current = Date.now());\n    window.addEventListener(\"mousemove\", onActive);\n    window.addEventListener(\"keydown\", onActive);\n    window.addEventListener(\"click\", onActive);\n\n    const iv = window.setInterval(() => {\n      const since = Date.now() - lastActiveRef.current;\n      const limit = 50 * 60_000; // 50 minutes\n      if (since >= limit) {\n        alert(\"Break time ⏸️ You’ve been focused ~50 minutes. Take 5 to recharge?\");\n        lastActiveRef.current = Date.now();\n      }\n    }, 30_000);\n\n    return () => {\n      window.clearInterval(iv);\n      window.removeEventListener(\"mousemove\", onActive);\n      window.removeEventListener(\"keydown\", onActive);\n      window.removeEventListener(\"click\", onActive);\n    };\n  }, []);\n\n  // ===== Add task with goal + priority\n  const addTask = () => {\n    const text = input.trim();\n    if (!text) return;\n    const newTask: Task = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: Date.now(),\n      dueAt: dueAt || undefined,\n      remind: remind || false,\n      notified: false,\n      pomos: 0,\n      priority: priorityPref,\n      goalId: goalPref ?? null,\n    };\n    setTasks((prev) => [newTask, ...prev]);\n    setInput(\"\");\n    setDueAt(\"\");\n    setRemind(false);\n  };\n\n  // ===== Task actions\n  const toggleTask = (id: number) => {\n    setTasks((prev) =>\n      prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n    );\n  };\n\n  const removeTask = (id: number) => {\n    setTasks((prev) => prev.filter((t) => t.id !== id));\n    if (activeTaskId === id) setActiveTaskId(null);\n  };\n\n  const clearCompleted = () => {\n    setTasks((prev) => prev.filter((t) => !t.completed));\n  };\n\n  const setTaskPriority = (id: number, p: Priority) => {\n    setTasks((prev) => prev.map(t => t.id === id ? { ...t, priority: p } : t));\n  };\n\n  // ===== Derivations\n  const remaining = useMemo(() => tasks.filter((t) => !t.completed).length, [tasks]);\n\n  const filteredTasks = useMemo(() => {\n    if (filter === \"active\") return tasks.filter((t) => !t.completed);\n    if (filter === \"completed\") return tasks.filter((t) => t.completed);\n    return tasks;\n  }, [tasks, filter]);\n\n  // ===== Notifications for due tasks\n  const requestPermission = async () => {\n    if (!(\"Notification\" in window)) {\n      alert(\"Notifications are not supported in this browser.\");\n      return;\n    }\n    const perm = await Notification.requestPermission();\n    if (perm !== \"granted\") alert(\"Notification permission denied.\");\n  };\n\n  const showReminder = (task: Task) => {\n    if (!(\"Notification\" in window)) return;\n    if (Notification.permission !== \"granted\") return;\n    new Notification(\"Task Reminder ⏰\", { body: task.text, tag: String(task.id) });\n  };\n\n  useEffect(() => {\n    const tick = () => {\n      const now = Date.now();\n      let changed = false;\n      const next = tasks.map((t) => {\n        if (!t.remind || t.notified || !t.dueAt) return t;\n        const due = Date.parse(t.dueAt);\n        if (!isNaN(due) && now >= due) {\n          showReminder(t);\n          changed = true;\n          return { ...t, notified: true };\n        }\n        return t;\n      });\n      if (changed) setTasks(next);\n    };\n    const id = window.setInterval(tick, 30_000);\n    tick();\n    return () => window.clearInterval(id);\n  }, [tasks]);\n\n  // ===== Pomodoro link\n  const handleFocusComplete = () => {\n    if (activeTaskId == null) return;\n    setTasks((prev) =>\n      prev.map((t) =>\n        t.id === activeTaskId ? { ...t, pomos: (t.pomos ?? 0) + 1 } : t\n      )\n    );\n  };\n  const activeTaskTitle = tasks.find((t) => t.id === activeTaskId)?.text;\n\n  // ===== Wellness suggestion\n  const wellnessSuggestion = useMemo(() => {\n    if (stress >= 7) return \"You're under a lot of stress. Break a big task into 3 tiny steps and take a 5-minute walk.\";\n    if (mood <= 2) return \"Be kind to yourself. Pick one small, important task and celebrate finishing it.\";\n    if (mood >= 4 && stress <= 3) return \"Great energy! Line up your top 3 important tasks and enter Focus mode.\";\n    return \"Keep steady. Do one small step, then check in again.\";\n  }, [mood, stress]);\n\n  // ===== Goals helpers\n  const addGoal = () => {\n    const title = goalTitle.trim();\n    if (!title) return;\n    const g: Goal = { id: Date.now(), title, emoji: goalEmoji };\n    setGoals((prev) => [...prev, g]);\n    setGoalTitle(\"\");\n  };\n\n  const progressByGoal = useMemo(() => {\n    const map = new Map<number, { total: number; done: number }>();\n    for (const t of tasks) {\n      if (t.goalId == null) continue;\n      const v = map.get(t.goalId) ?? { total: 0, done: 0 };\n      v.total += 1;\n      if (t.completed) v.done += 1;\n      map.set(t.goalId, v);\n    }\n    return map;\n  }, [tasks]);\n\n  // ===== Matrix view helper\n  const labels: Record<Priority, string> = {\n    UI: \"Urgent + Important\",\n    UN: \"Urgent + Not Important\",\n    NI: \"Not Urgent + Important\",\n    NN: \"Not Urgent + Not Important\",\n  };\n  const quadrants: Priority[] = [\"UI\", \"UN\", \"NI\", \"NN\"];\n\n  return (\n    <>\n      {/* Live animated background + brand header */}\n      <LiveBackground />\n      <header className=\"brand\">\n        <div className=\"brand__logo\">\n          AstraFocus <span>Nexus</span>\n        </div>\n        <p className=\"brand__tag\">Define • Do • Done</p>\n      </header>\n\n      {/* Main app container */}\n      <div className=\"container\">\n        <h1 className=\"title\">\n          Task Tracker <span className=\"badge\">✅</span>\n        </h1>\n\n        {/* Wellness Check-in */}\n        <div className=\"card\">\n          <h2 style={{ marginTop: 0 }}>Wellness check-in</h2>\n          <div style={{ display: \"flex\", gap: 16, alignItems: \"center\", flexWrap: \"wrap\" }}>\n            <div>\n              <div style={{ fontSize: 12, opacity: 0.8, marginBottom: 6 }}>Mood</div>\n              <div style={{ display: \"flex\", gap: 8 }}>\n                {[1, 2, 3, 4, 5].map((v) => {\n                  const emoji = [\"😟\", \"🙁\", \"😐\", \"🙂\", \"😄\"][v - 1];\n                  return (\n                    <button\n                      key={v}\n                      className=\"emoji-btn\"\n                      aria-label={`Mood ${v}`}\n                      onClick={() => setMood(v)}\n                      style={{\n                        border: mood === v ? \"2px solid var(--accent)\" : \"1px solid rgba(255,255,255,.12)\",\n                      }}\n                    >\n                      {emoji}\n                    </button>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div style={{ minWidth: 220 }}>\n              <div style={{ fontSize: 12, opacity: 0.8, marginBottom: 6 }}>Stress: {stress}/10</div>\n              <input type=\"range\" min={0} max={10} value={stress} onChange={(e) => setStress(Number(e.target.value))} style={{ width: \"100%\" }} />\n            </div>\n          </div>\n\n          <div className=\"tip\" style={{ marginTop: 12 }}>\n            <strong>Suggestion:</strong> {wellnessSuggestion}\n          </div>\n\n          {stress >= 7 && (\n            <button\n              className=\"btn\"\n              style={{ marginTop: 12 }}\n              onClick={() => {\n                const t = tasks.find((t) => !t.completed);\n                if (t) {\n                  alert(`Try this: Write 3 micro-steps for \"${t.text}\" and do the first in 2 minutes.`);\n                } else {\n                  alert(\"Add a task first, then break it into 3 micro-steps.\");\n                }\n              }}\n            >\n              Break down my current task\n            </button>\n          )}\n        </div>\n\n        {/* Goals Panel */}\n        <div className=\"card\">\n          <h2 style={{ marginTop: 0 }}>Personal goals</h2>\n          <div style={{ display: \"flex\", gap: 8, flexWrap: \"wrap\" }}>\n            <select value={goalEmoji} onChange={(e) => setGoalEmoji(e.target.value)}>\n              {[\"🎯\", \"🏋️\", \"📚\", \"💼\", \"💵\", \"🧘\", \"🧠\", \"💡\", \"❤️\", \"🏃\"].map((e) => (\n                <option key={e} value={e}>\n                  {e}\n                </option>\n              ))}\n            </select>\n            <input\n              className=\"input\"\n              placeholder=\"Add a new goal (e.g., Stronger body)\"\n              value={goalTitle}\n              onChange={(e) => setGoalTitle(e.target.value)}\n            />\n            <button className=\"btn\" onClick={addGoal}>\n              Add\n            </button>\n          </div>\n\n          {goals.length === 0 ? (\n            <div className=\"muted\" style={{ marginTop: 8 }}>\n              No goals yet. Add one, then link tasks to it.\n            </div>\n          ) : (\n            <ul className=\"goals\">\n              {goals.map((g) => {\n                const prog = progressByGoal.get(g.id) ?? { total: 0, done: 0 };\n                const pct = prog.total ? Math.round((prog.done / prog.total) * 100) : 0;\n                return (\n                  <li key={g.id}>\n                    <span className=\"goal-emoji\">{g.emoji ?? \"🎯\"}</span>\n                    <span className=\"goal-title\">{g.title}</span>\n                    <div className=\"bar\">\n                      <div className=\"fill\" style={{ width: `${pct}%` }} />\n                    </div>\n                    <span className=\"goal-stat\">\n                      {prog.done}/{prog.total}\n                    </span>\n                    <button className=\"pill\" onClick={() => setGoalPref(g.id)} title=\"Attach new tasks to this goal\">\n                      Use for new tasks\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n\n        {/* New Task Row */}\n        <div className=\"row card\" style={{ gap: 8, flexWrap: \"wrap\" }}>\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={input}\n            placeholder=\"Enter a task\"\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && addTask()}\n          />\n          <input\n            className=\"input\"\n            style={{ minWidth: 220 }}\n            type=\"datetime-local\"\n            value={dueAt}\n            onChange={(e) => setDueAt(e.target.value)}\n            title=\"Due date & time\"\n          />\n          <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n            <input type=\"checkbox\" checked={remind} onChange={(e) => setRemind(e.target.checked)} />\n            Remind me\n          </label>\n          <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n            Priority:\n            <select value={priorityPref} onChange={(e) => setPriorityPref(e.target.value as Priority)}>\n              <option value=\"UI\">Urgent + Important</option>\n              <option value=\"UN\">Urgent + Not Important</option>\n              <option value=\"NI\">Not Urgent + Important</option>\n              <option value=\"NN\">Not Urgent + Not Important</option>\n            </select>\n          </label>\n          <button className=\"btn\" onClick={addTask}>\n            Add Task\n          </button>\n          <button className=\"btn\" onClick={requestPermission}>\n            Enable Notifications\n          </button>\n        </div>\n\n        {/* Pomodoro Panel */}\n        <div className=\"card\">\n          <h2 style={{ marginTop: 0 }}>Pomodoro</h2>\n          <PomodoroTimer activeTaskTitle={activeTaskTitle} onFocusComplete={handleFocusComplete} />\n        </div>\n\n        {/* Controls */}\n        <div className=\"controls\">\n          <div className=\"filters\">\n            <button className={`chip ${filter === \"all\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"all\")}>\n              All\n            </button>\n            <button className={`chip ${filter === \"active\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"active\")}>\n              Active\n            </button>\n            <button className={`chip ${filter === \"completed\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"completed\")}>\n              Completed\n            </button>\n            <button className={`chip ${filter === \"matrix\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"matrix\")}>\n              Matrix\n            </button>\n          </div>\n\n          <div className=\"meta\">\n            <span>{remaining} left</span>\n            <button className=\"link\" onClick={clearCompleted} disabled={tasks.every((t) => !t.completed)}>\n              Clear completed\n            </button>\n          </div>\n        </div>\n\n        {/* Task List or Matrix */}\n        {filter !== \"matrix\" ? (\n          filteredTasks.length === 0 ? (\n            <p className=\"empty\">No tasks here yet.</p>\n          ) : (\n            <ul className=\"list\">\n              {filteredTasks.map((task) => (\n                <li className=\"item\" key={task.id}>\n                  <input\n                    type=\"checkbox\"\n                    checked={task.completed}\n                    onChange={() => toggleTask(task.id)}\n                    title=\"Toggle complete\"\n                  />\n                  <span className={`text ${task.completed ? \"done\" : \"\"}`}>\n                    {task.text}\n                    {task.dueAt && (\n                      <small style={{ marginLeft: 8, color: \"#475569\" }}>\n                        (due {new Date(task.dueAt).toLocaleString()})\n                      </small>\n                    )}\n                    {task.remind && !task.notified && <small> • will remind</small>}\n                    {task.remind && task.notified && <small> • reminded</small>}\n                    {typeof task.pomos === \"number\" && task.pomos > 0 && (\n                      <small style={{ marginLeft: 8, color: \"#475569\" }}>• {task.pomos} pomos</small>\n                    )}\n                  </span>\n\n                  <select\n                    value={task.priority ?? \"NN\"}\n                    onChange={(e) => setTaskPriority(task.id, e.target.value as Priority)}\n                    title=\"Eisenhower priority\"\n                    style={{ marginRight: 8 }}\n                  >\n                    <option value=\"UI\">UI</option>\n                    <option value=\"UN\">UN</option>\n                    <option value=\"NI\">NI</option>\n                    <option value=\"NN\">NN</option>\n                  </select>\n\n                  <button\n                    className={`pill ${activeTaskId === task.id ? \"active\" : \"\"}`}\n                    onClick={() => setActiveTaskId(activeTaskId === task.id ? null : task.id)}\n                    title=\"Set as active for Pomodoro\"\n                  >\n                    🎯 Focus\n                  </button>\n                  <button className=\"icon\" onClick={() => removeTask(task.id)} aria-label=\"Delete\">\n                    ✕\n                  </button>\n                </li>\n              ))}\n            </ul>\n          )\n        ) : (\n          <div className=\"matrix\">\n            {quadrants.map((q) => {\n              const items = tasks.filter((t) => (t.priority ?? \"NN\") === q);\n              return (\n                <div key={q} className=\"matrix-cell\">\n                  <div className=\"matrix-title\">{labels[q]}</div>\n                  <ul className=\"list\" style={{ marginTop: 6 }}>\n                    {items.length === 0 ? (\n                      <li className=\"item\">\n                        <span className=\"text muted\">No tasks.</span>\n                      </li>\n                    ) : (\n                      items.map((t) => (\n                        <li className=\"item\" key={t.id}>\n                          <input\n                            type=\"checkbox\"\n                            checked={t.completed}\n                            onChange={() => toggleTask(t.id)}\n                            title=\"Toggle complete\"\n                          />\n                          <span className={`text ${t.completed ? \"done\" : \"\"}`}>{t.text}</span>\n                          {!t.completed && (\n                            <div style={{ display: \"flex\", gap: 6, alignItems: \"center\", marginLeft: \"auto\" }}>\n                              {quadrants.map((opt) => (\n                                <button\n                                  key={opt}\n                                  className={`pill ${((t.priority ?? \"NN\") === opt && \"active\") || \"\"}`}\n                                  onClick={() => setTaskPriority(t.id, opt)}\n                                  title={labels[opt]}\n                                >\n                                  {opt}\n                                </button>\n                              ))}\n                            </div>\n                          )}\n                        </li>\n                      ))\n                    )}\n                  </ul>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}