{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport PomodoroTimer from \"./PomodoroTimer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = \"task-tracker.tasks.v3\";\nconst App = () => {\n  _s();\n  var _tasks$find;\n  const [tasks, setTasks] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [dueAt, setDueAt] = useState(\"\");\n  const [remind, setRemind] = useState(false);\n  const [filter, setFilter] = useState(\"all\");\n  const [activeTaskId, setActiveTaskId] = useState(null);\n\n  // Load from localStorage\n  useEffect(() => {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    if (raw) {\n      try {\n        setTasks(JSON.parse(raw));\n      } catch {}\n    }\n  }, []);\n\n  // Save to localStorage\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n  const addTask = () => {\n    const text = input.trim();\n    if (!text) return;\n    const newTask = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: Date.now(),\n      dueAt: dueAt || undefined,\n      remind: remind || false,\n      notified: false,\n      pomos: 0\n    };\n    setTasks(prev => [newTask, ...prev]);\n    setInput(\"\");\n    setDueAt(\"\");\n    setRemind(false);\n  };\n  const toggleTask = id => {\n    setTasks(prev => prev.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t));\n  };\n  const removeTask = id => {\n    setTasks(prev => prev.filter(t => t.id !== id));\n    if (activeTaskId === id) setActiveTaskId(null);\n  };\n  const clearCompleted = () => {\n    setTasks(prev => prev.filter(t => !t.completed));\n  };\n  const remaining = useMemo(() => tasks.filter(t => !t.completed).length, [tasks]);\n  const filteredTasks = useMemo(() => {\n    if (filter === \"active\") return tasks.filter(t => !t.completed);\n    if (filter === \"completed\") return tasks.filter(t => t.completed);\n    return tasks;\n  }, [tasks, filter]);\n\n  // --- Notifications ---\n  const requestPermission = async () => {\n    if (!(\"Notification\" in window)) {\n      alert(\"Notifications are not supported in this browser.\");\n      return;\n    }\n    const perm = await Notification.requestPermission();\n    if (perm !== \"granted\") alert(\"Notification permission denied.\");\n  };\n  const showReminder = task => {\n    if (!(\"Notification\" in window)) return;\n    if (Notification.permission !== \"granted\") return;\n    new Notification(\"Task Reminder ⏰\", {\n      body: task.text,\n      tag: String(task.id) // avoids duplicates\n    });\n  };\n\n  // Check every 30s for due tasks that haven't been notified yet\n  useEffect(() => {\n    const tick = () => {\n      const now = Date.now();\n      let changed = false;\n      const next = tasks.map(t => {\n        if (!t.remind || t.notified || !t.dueAt) return t;\n        const due = Date.parse(t.dueAt);\n        if (!isNaN(due) && now >= due) {\n          showReminder(t);\n          changed = true;\n          return {\n            ...t,\n            notified: true\n          };\n        }\n        return t;\n      });\n      if (changed) setTasks(next);\n    };\n    const id = window.setInterval(tick, 30000);\n    // Run once immediately\n    tick();\n    return () => window.clearInterval(id);\n  }, [tasks]);\n\n  // Pomodoro: when a focus session completes, increment pomo count on active task\n  const handleFocusComplete = () => {\n    if (activeTaskId == null) return;\n    setTasks(prev => prev.map(t => {\n      var _t$pomos;\n      return t.id === activeTaskId ? {\n        ...t,\n        pomos: ((_t$pomos = t.pomos) !== null && _t$pomos !== void 0 ? _t$pomos : 0) + 1\n      } : t;\n    }));\n  };\n  const activeTaskTitle = (_tasks$find = tasks.find(t => t.id === activeTaskId)) === null || _tasks$find === void 0 ? void 0 : _tasks$find.text;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: [\"Task Tracker \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge\",\n        children: \"\\u2705\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      style: {\n        gap: 8,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        value: input,\n        placeholder: \"Enter a task\",\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && addTask()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        style: {\n          minWidth: 220\n        },\n        type: \"datetime-local\",\n        value: dueAt,\n        onChange: e => setDueAt(e.target.value),\n        title: \"Due date & time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: remind,\n          onChange: e => setRemind(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), \"Remind me\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: requestPermission,\n        children: \"Enable Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Pomodoro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PomodoroTimer, {\n        activeTaskTitle: activeTaskTitle,\n        onFocusComplete: handleFocusComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `chip ${filter === \"all\" ? \"active\" : \"\"}`,\n          onClick: () => setFilter(\"all\"),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `chip ${filter === \"active\" ? \"active\" : \"\"}`,\n          onClick: () => setFilter(\"active\"),\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `chip ${filter === \"completed\" ? \"active\" : \"\"}`,\n          onClick: () => setFilter(\"completed\"),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [remaining, \" left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"link\",\n          onClick: clearCompleted,\n          disabled: tasks.every(t => !t.completed),\n          children: \"Clear completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), filteredTasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty\",\n      children: \"No tasks here yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => toggleTask(task.id),\n          title: \"Toggle complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `text ${task.completed ? \"done\" : \"\"}`,\n          children: [task.text, task.dueAt && /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              marginLeft: 8,\n              color: \"#475569\"\n            },\n            children: [\"(due \", new Date(task.dueAt).toLocaleString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this), task.remind && !task.notified && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" \\u2022 will remind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 51\n          }, this), task.remind && task.notified && /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \" \\u2022 reminded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 50\n          }, this), typeof task.pomos === \"number\" && task.pomos > 0 && /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              marginLeft: 8,\n              color: \"#475569\"\n            },\n            children: [\"\\u2022 \", task.pomos, \" pomos\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `pill ${activeTaskId === task.id ? \"active\" : \"\"}`,\n          onClick: () => setActiveTaskId(activeTaskId === task.id ? null : task.id),\n          title: \"Set as active for Pomodoro\",\n          children: \"Focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"icon\",\n          onClick: () => removeTask(task.id),\n          \"aria-label\": \"Delete\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rnAQurCi3/9OdkZkB4jfDmErVrA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","PomodoroTimer","jsxDEV","_jsxDEV","STORAGE_KEY","App","_s","_tasks$find","tasks","setTasks","input","setInput","dueAt","setDueAt","remind","setRemind","filter","setFilter","activeTaskId","setActiveTaskId","raw","localStorage","getItem","JSON","parse","setItem","stringify","addTask","text","trim","newTask","id","Date","now","completed","createdAt","undefined","notified","pomos","prev","toggleTask","map","t","removeTask","clearCompleted","remaining","length","filteredTasks","requestPermission","window","alert","perm","Notification","showReminder","task","permission","body","tag","String","tick","changed","next","due","isNaN","setInterval","clearInterval","handleFocusComplete","_t$pomos","activeTaskTitle","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","gap","flexWrap","type","value","placeholder","onChange","e","target","onKeyDown","key","minWidth","title","display","alignItems","checked","onClick","marginTop","onFocusComplete","disabled","every","marginLeft","color","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/App.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport PomodoroTimer from \"./PomodoroTimer\";\n\ntype Filter = \"all\" | \"active\" | \"completed\";\n\ninterface Task {\n  id: number;\n  text: string;\n  completed: boolean;\n  createdAt: number;\n  /** ISO string like \"2025-08-29T10:30\" from <input type=\"datetime-local\"> */\n  dueAt?: string;\n  /** true if we should notify when due */\n  remind?: boolean;\n  /** internal flag so we don't double-notify */\n  notified?: boolean;\n  /** completed focus sessions */\n  pomos?: number;\n}\n\nconst STORAGE_KEY = \"task-tracker.tasks.v3\";\n\nconst App: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [dueAt, setDueAt] = useState<string>(\"\");\n  const [remind, setRemind] = useState<boolean>(false);\n  const [filter, setFilter] = useState<Filter>(\"all\");\n  const [activeTaskId, setActiveTaskId] = useState<number | null>(null);\n\n  // Load from localStorage\n  useEffect(() => {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    if (raw) {\n      try {\n        setTasks(JSON.parse(raw));\n      } catch {}\n    }\n  }, []);\n\n  // Save to localStorage\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(tasks));\n  }, [tasks]);\n\n  const addTask = () => {\n    const text = input.trim();\n    if (!text) return;\n    const newTask: Task = {\n      id: Date.now(),\n      text,\n      completed: false,\n      createdAt: Date.now(),\n      dueAt: dueAt || undefined,\n      remind: remind || false,\n      notified: false,\n      pomos: 0,\n    };\n    setTasks((prev) => [newTask, ...prev]);\n    setInput(\"\");\n    setDueAt(\"\");\n    setRemind(false);\n  };\n\n  const toggleTask = (id: number) => {\n    setTasks((prev) =>\n      prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n    );\n  };\n\n  const removeTask = (id: number) => {\n    setTasks((prev) => prev.filter((t) => t.id !== id));\n    if (activeTaskId === id) setActiveTaskId(null);\n  };\n\n  const clearCompleted = () => {\n    setTasks((prev) => prev.filter((t) => !t.completed));\n  };\n\n  const remaining = useMemo(\n    () => tasks.filter((t) => !t.completed).length,\n    [tasks]\n  );\n\n  const filteredTasks = useMemo(() => {\n    if (filter === \"active\") return tasks.filter((t) => !t.completed);\n    if (filter === \"completed\") return tasks.filter((t) => t.completed);\n    return tasks;\n  }, [tasks, filter]);\n\n  // --- Notifications ---\n  const requestPermission = async () => {\n    if (!(\"Notification\" in window)) {\n      alert(\"Notifications are not supported in this browser.\");\n      return;\n    }\n    const perm = await Notification.requestPermission();\n    if (perm !== \"granted\") alert(\"Notification permission denied.\");\n  };\n\n  const showReminder = (task: Task) => {\n    if (!(\"Notification\" in window)) return;\n    if (Notification.permission !== \"granted\") return;\n\n    new Notification(\"Task Reminder ⏰\", {\n      body: task.text,\n      tag: String(task.id), // avoids duplicates\n    });\n  };\n\n  // Check every 30s for due tasks that haven't been notified yet\n  useEffect(() => {\n    const tick = () => {\n      const now = Date.now();\n      let changed = false;\n      const next = tasks.map((t) => {\n        if (!t.remind || t.notified || !t.dueAt) return t;\n        const due = Date.parse(t.dueAt);\n        if (!isNaN(due) && now >= due) {\n          showReminder(t);\n          changed = true;\n          return { ...t, notified: true };\n        }\n        return t;\n      });\n      if (changed) setTasks(next);\n    };\n\n    const id = window.setInterval(tick, 30_000);\n    // Run once immediately\n    tick();\n    return () => window.clearInterval(id);\n  }, [tasks]);\n\n  // Pomodoro: when a focus session completes, increment pomo count on active task\n  const handleFocusComplete = () => {\n    if (activeTaskId == null) return;\n    setTasks((prev) =>\n      prev.map((t) =>\n        t.id === activeTaskId ? { ...t, pomos: (t.pomos ?? 0) + 1 } : t\n      )\n    );\n  };\n  const activeTaskTitle = tasks.find((t) => t.id === activeTaskId)?.text;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">\n        Task Tracker <span className=\"badge\">✅</span>\n      </h1>\n\n      <div className=\"row\" style={{ gap: 8, flexWrap: \"wrap\" }}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={input}\n          placeholder=\"Enter a task\"\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && addTask()}\n        />\n        <input\n          className=\"input\"\n          style={{ minWidth: 220 }}\n          type=\"datetime-local\"\n          value={dueAt}\n          onChange={(e) => setDueAt(e.target.value)}\n          title=\"Due date & time\"\n        />\n        <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\n          <input\n            type=\"checkbox\"\n            checked={remind}\n            onChange={(e) => setRemind(e.target.checked)}\n          />\n          Remind me\n        </label>\n        <button className=\"btn\" onClick={addTask}>\n          Add Task\n        </button>\n        <button className=\"btn\" onClick={requestPermission}>\n          Enable Notifications\n        </button>\n      </div>\n\n      {/* Pomodoro Panel */}\n      <div className=\"card\">\n        <h2 style={{ marginTop: 0 }}>Pomodoro</h2>\n        <PomodoroTimer\n          activeTaskTitle={activeTaskTitle}\n          onFocusComplete={handleFocusComplete}\n        />\n      </div>\n\n      <div className=\"controls\">\n        <div className=\"filters\">\n          <button\n            className={`chip ${filter === \"all\" ? \"active\" : \"\"}`}\n            onClick={() => setFilter(\"all\")}\n          >\n            All\n          </button>\n          <button\n            className={`chip ${filter === \"active\" ? \"active\" : \"\"}`}\n            onClick={() => setFilter(\"active\")}\n          >\n            Active\n          </button>\n          <button\n            className={`chip ${filter === \"completed\" ? \"active\" : \"\"}`}\n            onClick={() => setFilter(\"completed\")}\n          >\n            Completed\n          </button>\n        </div>\n\n        <div className=\"meta\">\n          <span>{remaining} left</span>\n          <button\n            className=\"link\"\n            onClick={clearCompleted}\n            disabled={tasks.every((t) => !t.completed)}\n          >\n            Clear completed\n          </button>\n        </div>\n      </div>\n\n      {filteredTasks.length === 0 ? (\n        <p className=\"empty\">No tasks here yet.</p>\n      ) : (\n        <ul className=\"list\">\n          {filteredTasks.map((task) => (\n            <li className=\"item\" key={task.id}>\n              <input\n                type=\"checkbox\"\n                checked={task.completed}\n                onChange={() => toggleTask(task.id)}\n                title=\"Toggle complete\"\n              />\n              <span className={`text ${task.completed ? \"done\" : \"\"}`}>\n                {task.text}\n                {task.dueAt && (\n                  <small style={{ marginLeft: 8, color: \"#475569\" }}>\n                    (due {new Date(task.dueAt).toLocaleString()})\n                  </small>\n                )}\n                {task.remind && !task.notified && <small> • will remind</small>}\n                {task.remind && task.notified && <small> • reminded</small>}\n                {typeof task.pomos === \"number\" && task.pomos > 0 && (\n                  <small style={{ marginLeft: 8, color: \"#475569\" }}>\n                    • {task.pomos} pomos\n                  </small>\n                )}\n              </span>\n              <button\n                className={`pill ${activeTaskId === task.id ? \"active\" : \"\"}`}\n                onClick={() =>\n                  setActiveTaskId(activeTaskId === task.id ? null : task.id)\n                }\n                title=\"Set as active for Pomodoro\"\n              >\n              Focus\n              </button>\n              <button\n                className=\"icon\"\n                onClick={() => removeTask(task.id)}\n                aria-label=\"Delete\"\n              >\n                ✕\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}