{"ast":null,"code":"import _objectSpread from\"C:/Users/eskew/github/tasktracker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useMemo,useState}from\"react\";import PomodoroTimer from\"./PomodoroTimer\";import LiveBackground from\"./LiveBackground\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const STORAGE_KEY=\"task-tracker.tasks.v3\";const App=()=>{var _tasks$find;const[tasks,setTasks]=useState([]);const[input,setInput]=useState(\"\");const[dueAt,setDueAt]=useState(\"\");const[remind,setRemind]=useState(false);const[filter,setFilter]=useState(\"all\");const[activeTaskId,setActiveTaskId]=useState(null);// Load from localStorage\nuseEffect(()=>{const raw=localStorage.getItem(STORAGE_KEY);if(raw){try{setTasks(JSON.parse(raw));}catch(_unused){}}},[]);// Save to localStorage\nuseEffect(()=>{localStorage.setItem(STORAGE_KEY,JSON.stringify(tasks));},[tasks]);const addTask=()=>{const text=input.trim();if(!text)return;const newTask={id:Date.now(),text,completed:false,createdAt:Date.now(),dueAt:dueAt||undefined,remind:remind||false,notified:false,pomos:0};setTasks(prev=>[newTask,...prev]);setInput(\"\");setDueAt(\"\");setRemind(false);};const toggleTask=id=>{setTasks(prev=>prev.map(t=>t.id===id?_objectSpread(_objectSpread({},t),{},{completed:!t.completed}):t));};const removeTask=id=>{setTasks(prev=>prev.filter(t=>t.id!==id));if(activeTaskId===id)setActiveTaskId(null);};const clearCompleted=()=>{setTasks(prev=>prev.filter(t=>!t.completed));};const remaining=useMemo(()=>tasks.filter(t=>!t.completed).length,[tasks]);const filteredTasks=useMemo(()=>{if(filter===\"active\")return tasks.filter(t=>!t.completed);if(filter===\"completed\")return tasks.filter(t=>t.completed);return tasks;},[tasks,filter]);// --- Notifications ---\nconst requestPermission=async()=>{if(!(\"Notification\"in window)){alert(\"Notifications are not supported in this browser.\");return;}const perm=await Notification.requestPermission();if(perm!==\"granted\")alert(\"Notification permission denied.\");};const showReminder=task=>{if(!(\"Notification\"in window))return;if(Notification.permission!==\"granted\")return;new Notification(\"Task Reminder ⏰\",{body:task.text,tag:String(task.id)// avoids duplicates\n});};// Check every 30s for due tasks that haven't been notified yet\nuseEffect(()=>{const tick=()=>{const now=Date.now();let changed=false;const next=tasks.map(t=>{if(!t.remind||t.notified||!t.dueAt)return t;const due=Date.parse(t.dueAt);if(!isNaN(due)&&now>=due){showReminder(t);changed=true;return _objectSpread(_objectSpread({},t),{},{notified:true});}return t;});if(changed)setTasks(next);};const id=window.setInterval(tick,30000);// Run once immediately\ntick();return()=>window.clearInterval(id);},[tasks]);// Pomodoro: when a focus session completes, increment pomo count on active task\nconst handleFocusComplete=()=>{if(activeTaskId==null)return;setTasks(prev=>prev.map(t=>{var _t$pomos;return t.id===activeTaskId?_objectSpread(_objectSpread({},t),{},{pomos:((_t$pomos=t.pomos)!==null&&_t$pomos!==void 0?_t$pomos:0)+1}):t;}));};const activeTaskTitle=(_tasks$find=tasks.find(t=>t.id===activeTaskId))===null||_tasks$find===void 0?void 0:_tasks$find.text;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(LiveBackground,{}),/*#__PURE__*/_jsxs(\"header\",{className:\"brand\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"brand__logo\",children:[\"AstraFocus \",/*#__PURE__*/_jsx(\"span\",{children:\"Nexus\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"brand__tag\",children:\"Define \\u2022 Do \\u2022 Done\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"title\",children:[\"Task Tracker \",/*#__PURE__*/_jsx(\"span\",{className:\"badge\",children:\"\\u2705\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",style:{gap:8,flexWrap:\"wrap\"},children:[/*#__PURE__*/_jsx(\"input\",{className:\"input\",type:\"text\",value:input,placeholder:\"Enter a task\",onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&addTask()}),/*#__PURE__*/_jsx(\"input\",{className:\"input\",style:{minWidth:220},type:\"datetime-local\",value:dueAt,onChange:e=>setDueAt(e.target.value),title:\"Due date & time\"}),/*#__PURE__*/_jsxs(\"label\",{style:{display:\"flex\",alignItems:\"center\",gap:6},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:remind,onChange:e=>setRemind(e.target.checked)}),\"Remind me\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:addTask,children:\"Add Task\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn\",onClick:requestPermission,children:\"Enable Notifications\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginTop:0},children:\"Pomodoro\"}),/*#__PURE__*/_jsx(PomodoroTimer,{activeTaskTitle:activeTaskTitle,onFocusComplete:handleFocusComplete})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filters\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"chip \".concat(filter===\"all\"?\"active\":\"\"),onClick:()=>setFilter(\"all\"),children:\"All\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chip \".concat(filter===\"active\"?\"active\":\"\"),onClick:()=>setFilter(\"active\"),children:\"Active\"}),/*#__PURE__*/_jsx(\"button\",{className:\"chip \".concat(filter===\"completed\"?\"active\":\"\"),onClick:()=>setFilter(\"completed\"),children:\"Completed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"meta\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[remaining,\" left\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"link\",onClick:clearCompleted,disabled:tasks.every(t=>!t.completed),children:\"Clear completed\"})]})]}),filteredTasks.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"empty\",children:\"No tasks here yet.\"}):/*#__PURE__*/_jsx(\"ul\",{className:\"list\",children:filteredTasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:task.completed,onChange:()=>toggleTask(task.id),title:\"Toggle complete\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text \".concat(task.completed?\"done\":\"\"),children:[task.text,task.dueAt&&/*#__PURE__*/_jsxs(\"small\",{style:{marginLeft:8,color:\"#475569\"},children:[\"(due \",new Date(task.dueAt).toLocaleString(),\")\"]}),task.remind&&!task.notified&&/*#__PURE__*/_jsx(\"small\",{children:\" \\u2022 will remind\"}),task.remind&&task.notified&&/*#__PURE__*/_jsx(\"small\",{children:\" \\u2022 reminded\"}),typeof task.pomos===\"number\"&&task.pomos>0&&/*#__PURE__*/_jsxs(\"small\",{style:{marginLeft:8,color:\"#475569\"},children:[\"\\u2022 \",task.pomos,\" pomos\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"pill \".concat(activeTaskId===task.id?\"active\":\"\"),onClick:()=>setActiveTaskId(activeTaskId===task.id?null:task.id),title:\"Set as active for Pomodoro\",children:\"\\uD83C\\uDFAF Focus\"}),/*#__PURE__*/_jsx(\"button\",{className:\"icon\",onClick:()=>removeTask(task.id),\"aria-label\":\"Delete\",children:\"\\u2715\"})]},task.id))})]})]});};export default App;","map":{"version":3,"names":["React","useEffect","useMemo","useState","PomodoroTimer","LiveBackground","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","STORAGE_KEY","App","_tasks$find","tasks","setTasks","input","setInput","dueAt","setDueAt","remind","setRemind","filter","setFilter","activeTaskId","setActiveTaskId","raw","localStorage","getItem","JSON","parse","_unused","setItem","stringify","addTask","text","trim","newTask","id","Date","now","completed","createdAt","undefined","notified","pomos","prev","toggleTask","map","t","_objectSpread","removeTask","clearCompleted","remaining","length","filteredTasks","requestPermission","window","alert","perm","Notification","showReminder","task","permission","body","tag","String","tick","changed","next","due","isNaN","setInterval","clearInterval","handleFocusComplete","_t$pomos","activeTaskTitle","find","children","className","style","gap","flexWrap","type","value","placeholder","onChange","e","target","onKeyDown","key","minWidth","title","display","alignItems","checked","onClick","marginTop","onFocusComplete","concat","disabled","every","marginLeft","color","toLocaleString"],"sources":["C:/Users/eskew/github/tasktracker/src/App.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport PomodoroTimer from \"./PomodoroTimer\";\r\nimport LiveBackground from \"./LiveBackground\";\r\n\r\ntype Filter = \"all\" | \"active\" | \"completed\";\r\n\r\ninterface Task {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n  createdAt: number;\r\n  /** ISO string like \"2025-08-29T10:30\" from <input type=\"datetime-local\"> */\r\n  dueAt?: string;\r\n  /** true if we should notify when due */\r\n  remind?: boolean;\r\n  /** internal flag so we don't double-notify */\r\n  notified?: boolean;\r\n  /** completed focus sessions */\r\n  pomos?: number;\r\n}\r\n\r\nconst STORAGE_KEY = \"task-tracker.tasks.v3\";\r\n\r\nconst App: React.FC = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [dueAt, setDueAt] = useState<string>(\"\");\r\n  const [remind, setRemind] = useState<boolean>(false);\r\n  const [filter, setFilter] = useState<Filter>(\"all\");\r\n  const [activeTaskId, setActiveTaskId] = useState<number | null>(null);\r\n\r\n  // Load from localStorage\r\n  useEffect(() => {\r\n    const raw = localStorage.getItem(STORAGE_KEY);\r\n    if (raw) {\r\n      try { setTasks(JSON.parse(raw)); } catch {}\r\n    }\r\n  }, []);\r\n\r\n  // Save to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const addTask = () => {\r\n    const text = input.trim();\r\n    if (!text) return;\r\n    const newTask: Task = {\r\n      id: Date.now(),\r\n      text,\r\n      completed: false,\r\n      createdAt: Date.now(),\r\n      dueAt: dueAt || undefined,\r\n      remind: remind || false,\r\n      notified: false,\r\n      pomos: 0,\r\n    };\r\n    setTasks((prev) => [newTask, ...prev]);\r\n    setInput(\"\");\r\n    setDueAt(\"\");\r\n    setRemind(false);\r\n  };\r\n\r\n  const toggleTask = (id: number) => {\r\n    setTasks((prev) =>\r\n      prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\r\n    );\r\n  };\r\n\r\n  const removeTask = (id: number) => {\r\n    setTasks((prev) => prev.filter((t) => t.id !== id));\r\n    if (activeTaskId === id) setActiveTaskId(null);\r\n  };\r\n\r\n  const clearCompleted = () => {\r\n    setTasks((prev) => prev.filter((t) => !t.completed));\r\n  };\r\n\r\n  const remaining = useMemo(() => tasks.filter((t) => !t.completed).length, [tasks]);\r\n\r\n  const filteredTasks = useMemo(() => {\r\n    if (filter === \"active\") return tasks.filter((t) => !t.completed);\r\n    if (filter === \"completed\") return tasks.filter((t) => t.completed);\r\n    return tasks;\r\n  }, [tasks, filter]);\r\n\r\n  // --- Notifications ---\r\n  const requestPermission = async () => {\r\n    if (!(\"Notification\" in window)) {\r\n      alert(\"Notifications are not supported in this browser.\");\r\n      return;\r\n    }\r\n    const perm = await Notification.requestPermission();\r\n    if (perm !== \"granted\") alert(\"Notification permission denied.\");\r\n  };\r\n\r\n  const showReminder = (task: Task) => {\r\n    if (!(\"Notification\" in window)) return;\r\n    if (Notification.permission !== \"granted\") return;\r\n\r\n    new Notification(\"Task Reminder ⏰\", {\r\n      body: task.text,\r\n      tag: String(task.id), // avoids duplicates\r\n    });\r\n  };\r\n\r\n  // Check every 30s for due tasks that haven't been notified yet\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      const now = Date.now();\r\n      let changed = false;\r\n      const next = tasks.map((t) => {\r\n        if (!t.remind || t.notified || !t.dueAt) return t;\r\n        const due = Date.parse(t.dueAt);\r\n        if (!isNaN(due) && now >= due) {\r\n          showReminder(t);\r\n          changed = true;\r\n          return { ...t, notified: true };\r\n        }\r\n        return t;\r\n      });\r\n      if (changed) setTasks(next);\r\n    };\r\n\r\n    const id = window.setInterval(tick, 30_000);\r\n    // Run once immediately\r\n    tick();\r\n    return () => window.clearInterval(id);\r\n  }, [tasks]);\r\n\r\n  // Pomodoro: when a focus session completes, increment pomo count on active task\r\n  const handleFocusComplete = () => {\r\n    if (activeTaskId == null) return;\r\n    setTasks((prev) =>\r\n      prev.map((t) =>\r\n        t.id === activeTaskId ? { ...t, pomos: (t.pomos ?? 0) + 1 } : t\r\n      )\r\n    );\r\n  };\r\n  const activeTaskTitle = tasks.find((t) => t.id === activeTaskId)?.text;\r\n\r\n  return (\r\n    <>\r\n      {/* Live animated background + brand header */}\r\n      <LiveBackground />\r\n      <header className=\"brand\">\r\n        <div className=\"brand__logo\">\r\n          AstraFocus <span>Nexus</span>\r\n        </div>\r\n        <p className=\"brand__tag\">Define • Do • Done</p>\r\n      </header>\r\n\r\n      {/* Main app container */}\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">\r\n          Task Tracker <span className=\"badge\">✅</span>\r\n        </h1>\r\n\r\n        <div className=\"row\" style={{ gap: 8, flexWrap: \"wrap\" }}>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            value={input}\r\n            placeholder=\"Enter a task\"\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && addTask()}\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            style={{ minWidth: 220 }}\r\n            type=\"datetime-local\"\r\n            value={dueAt}\r\n            onChange={(e) => setDueAt(e.target.value)}\r\n            title=\"Due date & time\"\r\n          />\r\n          <label style={{ display: \"flex\", alignItems: \"center\", gap: 6 }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={remind}\r\n              onChange={(e) => setRemind(e.target.checked)}\r\n            />\r\n            Remind me\r\n          </label>\r\n          <button className=\"btn\" onClick={addTask}>Add Task</button>\r\n          <button className=\"btn\" onClick={requestPermission}>Enable Notifications</button>\r\n        </div>\r\n\r\n        {/* Pomodoro Panel */}\r\n        <div className=\"card\">\r\n          <h2 style={{ marginTop: 0 }}>Pomodoro</h2>\r\n          <PomodoroTimer\r\n            activeTaskTitle={activeTaskTitle}\r\n            onFocusComplete={handleFocusComplete}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <div className=\"filters\">\r\n            <button className={`chip ${filter === \"all\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"all\")}>All</button>\r\n            <button className={`chip ${filter === \"active\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"active\")}>Active</button>\r\n            <button className={`chip ${filter === \"completed\" ? \"active\" : \"\"}`} onClick={() => setFilter(\"completed\")}>Completed</button>\r\n          </div>\r\n\r\n          <div className=\"meta\">\r\n            <span>{remaining} left</span>\r\n            <button\r\n              className=\"link\"\r\n              onClick={clearCompleted}\r\n              disabled={tasks.every((t) => !t.completed)}\r\n            >\r\n              Clear completed\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {filteredTasks.length === 0 ? (\r\n          <p className=\"empty\">No tasks here yet.</p>\r\n        ) : (\r\n          <ul className=\"list\">\r\n            {filteredTasks.map((task) => (\r\n              <li className=\"item\" key={task.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={task.completed}\r\n                  onChange={() => toggleTask(task.id)}\r\n                  title=\"Toggle complete\"\r\n                />\r\n                <span className={`text ${task.completed ? \"done\" : \"\"}`}>\r\n                  {task.text}\r\n                  {task.dueAt && (\r\n                    <small style={{ marginLeft: 8, color: \"#475569\" }}>\r\n                      (due {new Date(task.dueAt).toLocaleString()})\r\n                    </small>\r\n                  )}\r\n                  {task.remind && !task.notified && <small> • will remind</small>}\r\n                  {task.remind && task.notified && <small> • reminded</small>}\r\n                  {typeof task.pomos === \"number\" && task.pomos > 0 && (\r\n                    <small style={{ marginLeft: 8, color: \"#475569\" }}>\r\n                      • {task.pomos} pomos\r\n                    </small>\r\n                  )}\r\n                </span>\r\n                <button\r\n                  className={`pill ${activeTaskId === task.id ? \"active\" : \"\"}`}\r\n                  onClick={() =>\r\n                    setActiveTaskId(activeTaskId === task.id ? null : task.id)\r\n                  }\r\n                  title=\"Set as active for Pomodoro\"\r\n                >\r\n                  🎯 Focus\r\n                </button>\r\n                <button className=\"icon\" onClick={() => removeTask(task.id)} aria-label=\"Delete\">✕</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}