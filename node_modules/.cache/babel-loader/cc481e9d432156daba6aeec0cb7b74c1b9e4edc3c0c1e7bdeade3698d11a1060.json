{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\BreakSuggestions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUGGESTIONS = [\"üåø Stretch your body\", \"üëÄ Do the 20-20-20 eye reset\", \"üö∂ Walk around for 2 minutes\", \"üíß Drink some water\", \"üéµ Play one uplifting song\"];\nconst BreakSuggestions = ({\n  onStartBreak,\n  onSkipBreak\n}) => {\n  _s();\n  const picks = useMemo(() => {\n    const arr = [...SUGGESTIONS];\n    // shuffle simple\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return {\n      main: arr[0],\n      alts: arr.slice(1, 3)\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    role: \"dialog\",\n    \"aria-modal\": true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"modal-title\",\n        children: \"\\u23F0 Focus session complete! Take a 5-minute break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggest-main\",\n          children: picks.main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggest-alts\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Or try:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: picks.alts.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: s\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn glow\",\n          onClick: onStartBreak,\n          children: \"Start Break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pill\",\n          onClick: onSkipBreak,\n          children: \"Skip Break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(BreakSuggestions, \"lcbVy5ZwrmeHPlYWCY6QZEdWtBs=\");\n_c = BreakSuggestions;\nexport default BreakSuggestions;\nvar _c;\n$RefreshReg$(_c, \"BreakSuggestions\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","SUGGESTIONS","BreakSuggestions","onStartBreak","onSkipBreak","_s","picks","arr","i","length","j","Math","floor","random","main","alts","slice","className","role","children","fileName","_jsxFileName","lineNumber","columnNumber","map","s","onClick","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/BreakSuggestions.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\n\ntype Props = {\n  onStartBreak: () => void;\n  onSkipBreak: () => void;\n};\n\nconst SUGGESTIONS = [\n  \"üåø Stretch your body\",\n  \"üëÄ Do the 20-20-20 eye reset\",\n  \"üö∂ Walk around for 2 minutes\",\n  \"üíß Drink some water\",\n  \"üéµ Play one uplifting song\",\n];\n\nconst BreakSuggestions: React.FC<Props> = ({ onStartBreak, onSkipBreak }) => {\n  const picks = useMemo(() => {\n    const arr = [...SUGGESTIONS];\n    // shuffle simple\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return { main: arr[0], alts: arr.slice(1, 3) };\n  }, []);\n\n  return (\n    <div className=\"modal-overlay\" role=\"dialog\" aria-modal>\n      <div className=\"modal\">\n        <h3 className=\"modal-title\">‚è∞ Focus session complete! Take a 5-minute break</h3>\n        <div className=\"modal-body\">\n          <div className=\"suggest-main\">{picks.main}</div>\n          <div className=\"suggest-alts\">\n            <span>Or try:</span>\n            <ul>\n              {picks.alts.map((s) => (\n                <li key={s}>{s}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"modal-actions\">\n          <button className=\"btn glow\" onClick={onStartBreak}>Start Break</button>\n          <button className=\"pill\" onClick={onSkipBreak}>Skip Break</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BreakSuggestions;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}