{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\pages\\\\Goals.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Goals = ({\n  goals,\n  setGoals,\n  goalTitle,\n  setGoalTitle,\n  goalEmoji,\n  setGoalEmoji,\n  setGoalPref,\n  tasks\n}) => {\n  _s();\n  const addGoal = () => {\n    const title = goalTitle.trim();\n    if (!title) return;\n    const g = {\n      id: Date.now(),\n      title,\n      emoji: goalEmoji\n    };\n    setGoals([...goals, g]);\n    setGoalTitle(\"\");\n  };\n  const progress = useMemo(() => {\n    const m = new Map();\n    for (const t of tasks) {\n      var _m$get;\n      if (t.goalId == null) continue;\n      const v = (_m$get = m.get(t.goalId)) !== null && _m$get !== void 0 ? _m$get : {\n        total: 0,\n        done: 0\n      };\n      v.total += 1;\n      if (t.completed) v.done += 1;\n      m.set(t.goalId, v);\n    }\n    return m;\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginTop: 0\n      },\n      children: \"Personal goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 8,\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: goalEmoji,\n        onChange: e => setGoalEmoji(e.target.value),\n        children: [\"??\", \"???\", \"??\", \"??\", \"??\", \"??\", \"??\", \"??\", \"??\", \"??\"].map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: e,\n          children: e\n        }, e, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 139\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        placeholder: \"Add a new goal (e.g., Stronger body)\",\n        value: goalTitle,\n        onChange: e => setGoalTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: addGoal,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"muted\",\n      style: {\n        marginTop: 8\n      },\n      children: \"No goals yet. Add one, then link tasks to it.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"goals\",\n      children: goals.map(g => {\n        var _progress$get, _g$emoji;\n        const prog = (_progress$get = progress.get(g.id)) !== null && _progress$get !== void 0 ? _progress$get : {\n          total: 0,\n          done: 0\n        };\n        const pct = prog.total ? Math.round(prog.done / prog.total * 100) : 0;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"goal-emoji\",\n            children: (_g$emoji = g.emoji) !== null && _g$emoji !== void 0 ? _g$emoji : \"??\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"goal-title\",\n            children: g.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 87\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fill\",\n              style: {\n                width: `${pct}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"goal-stat\",\n            children: [prog.done, \"/\", prog.total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 91\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pill\",\n            onClick: () => setGoalPref(g.id),\n            title: \"Attach new tasks to this goal\",\n            children: \"Use for new tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, g.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Goals, \"w1+v397wmAOHhnkFt7AtWesxRR4=\");\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","Goals","goals","setGoals","goalTitle","setGoalTitle","goalEmoji","setGoalEmoji","setGoalPref","tasks","_s","addGoal","title","trim","g","id","Date","now","emoji","progress","m","Map","t","_m$get","goalId","v","get","total","done","completed","set","className","children","style","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","flexWrap","value","onChange","e","target","map","placeholder","onClick","length","_progress$get","_g$emoji","prog","pct","Math","round","width","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/pages/Goals.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\ntype Priority=\"UI\"|\"UN\"|\"NI\"|\"NN\";\ninterface Task{ id:number; text:string; completed:boolean; goalId?:number|null; priority?:Priority; }\ninterface Goal{ id:number; title:string; emoji?:string; }\ninterface Props{\n  goals:Goal[]; setGoals:(g:Goal[])=>void; goalTitle:string; setGoalTitle:(v:string)=>void;\n  goalEmoji:string; setGoalEmoji:(v:string)=>void; setGoalPref:(id:number|null)=>void; tasks:Task[];\n}\nconst Goals:React.FC<Props>=({goals,setGoals,goalTitle,setGoalTitle,goalEmoji,setGoalEmoji,setGoalPref,tasks})=>{\n  const addGoal=()=>{ const title=goalTitle.trim(); if(!title) return; const g:Goal={id:Date.now(), title, emoji:goalEmoji}; setGoals([...goals,g]); setGoalTitle(\"\"); };\n  const progress=useMemo(()=>{ const m=new Map<number,{total:number;done:number}>(); for(const t of tasks){ if(t.goalId==null) continue; const v=m.get(t.goalId)??{total:0,done:0}; v.total+=1; if(t.completed) v.done+=1; m.set(t.goalId,v);} return m; },[tasks]);\n  return (\n    <div className=\"card\">\n      <h2 style={{marginTop:0}}>Personal goals</h2>\n      <div style={{display:\"flex\",gap:8,flexWrap:\"wrap\"}}>\n        <select value={goalEmoji} onChange={e=>setGoalEmoji(e.target.value)}>{[\"??\",\"???\",\"??\",\"??\",\"??\",\"??\",\"??\",\"??\",\"??\",\"??\"].map(e=><option key={e} value={e}>{e}</option>)}</select>\n        <input className=\"input\" placeholder=\"Add a new goal (e.g., Stronger body)\" value={goalTitle} onChange={e=>setGoalTitle(e.target.value)} />\n        <button className=\"btn\" onClick={addGoal}>Add</button>\n      </div>\n      {goals.length===0? <div className=\"muted\" style={{marginTop:8}}>No goals yet. Add one, then link tasks to it.</div> :\n        <ul className=\"goals\">\n          {goals.map(g=>{ const prog=progress.get(g.id)??{total:0,done:0}; const pct=prog.total?Math.round((prog.done/prog.total)*100):0;\n            return (<li key={g.id}><span className=\"goal-emoji\">{g.emoji??\"??\"}</span><span className=\"goal-title\">{g.title}</span>\n              <div className=\"bar\"><div className=\"fill\" style={{width:`${pct}%`}}/></div><span className=\"goal-stat\">{prog.done}/{prog.total}</span>\n              <button className=\"pill\" onClick={()=>setGoalPref(g.id)} title=\"Attach new tasks to this goal\">Use for new tasks</button></li>);\n          })}\n        </ul>}\n    </div>\n  );\n};\nexport default Goals;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvC,MAAMC,KAAqB,GAACA,CAAC;EAACC,KAAK;EAACC,QAAQ;EAACC,SAAS;EAACC,YAAY;EAACC,SAAS;EAACC,YAAY;EAACC,WAAW;EAACC;AAAK,CAAC,KAAG;EAAAC,EAAA;EAC9G,MAAMC,OAAO,GAACA,CAAA,KAAI;IAAE,MAAMC,KAAK,GAACR,SAAS,CAACS,IAAI,CAAC,CAAC;IAAE,IAAG,CAACD,KAAK,EAAE;IAAQ,MAAME,CAAM,GAAC;MAACC,EAAE,EAACC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEL,KAAK;MAAEM,KAAK,EAACZ;IAAS,CAAC;IAAEH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAACY,CAAC,CAAC,CAAC;IAAET,YAAY,CAAC,EAAE,CAAC;EAAE,CAAC;EACtK,MAAMc,QAAQ,GAACrB,OAAO,CAAC,MAAI;IAAE,MAAMsB,CAAC,GAAC,IAAIC,GAAG,CAAoC,CAAC;IAAE,KAAI,MAAMC,CAAC,IAAIb,KAAK,EAAC;MAAA,IAAAc,MAAA;MAAE,IAAGD,CAAC,CAACE,MAAM,IAAE,IAAI,EAAE;MAAU,MAAMC,CAAC,IAAAF,MAAA,GAACH,CAAC,CAACM,GAAG,CAACJ,CAAC,CAACE,MAAM,CAAC,cAAAD,MAAA,cAAAA,MAAA,GAAE;QAACI,KAAK,EAAC,CAAC;QAACC,IAAI,EAAC;MAAC,CAAC;MAAEH,CAAC,CAACE,KAAK,IAAE,CAAC;MAAE,IAAGL,CAAC,CAACO,SAAS,EAAEJ,CAAC,CAACG,IAAI,IAAE,CAAC;MAAER,CAAC,CAACU,GAAG,CAACR,CAAC,CAACE,MAAM,EAACC,CAAC,CAAC;IAAC;IAAE,OAAOL,CAAC;EAAE,CAAC,EAAC,CAACX,KAAK,CAAC,CAAC;EACjQ,oBACET,OAAA;IAAK+B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBhC,OAAA;MAAIiC,KAAK,EAAE;QAACC,SAAS,EAAC;MAAC,CAAE;MAAAF,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7CtC,OAAA;MAAKiC,KAAK,EAAE;QAACM,OAAO,EAAC,MAAM;QAACC,GAAG,EAAC,CAAC;QAACC,QAAQ,EAAC;MAAM,CAAE;MAAAT,QAAA,gBACjDhC,OAAA;QAAQ0C,KAAK,EAAEpC,SAAU;QAACqC,QAAQ,EAAEC,CAAC,IAAErC,YAAY,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAV,QAAA,EAAE,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,CAAC,CAACc,GAAG,CAACF,CAAC,iBAAE5C,OAAA;UAAgB0C,KAAK,EAAEE,CAAE;UAAAZ,QAAA,EAAEY;QAAC,GAAfA,CAAC;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACnLtC,OAAA;QAAO+B,SAAS,EAAC,OAAO;QAACgB,WAAW,EAAC,sCAAsC;QAACL,KAAK,EAAEtC,SAAU;QAACuC,QAAQ,EAAEC,CAAC,IAAEvC,YAAY,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3ItC,OAAA;QAAQ+B,SAAS,EAAC,KAAK;QAACiB,OAAO,EAAErC,OAAQ;QAAAqB,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,EACLpC,KAAK,CAAC+C,MAAM,KAAG,CAAC,gBAAEjD,OAAA;MAAK+B,SAAS,EAAC,OAAO;MAACE,KAAK,EAAE;QAACC,SAAS,EAAC;MAAC,CAAE;MAAAF,QAAA,EAAC;IAA6C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBACjHtC,OAAA;MAAI+B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAClB9B,KAAK,CAAC4C,GAAG,CAAChC,CAAC,IAAE;QAAA,IAAAoC,aAAA,EAAAC,QAAA;QAAE,MAAMC,IAAI,IAAAF,aAAA,GAAC/B,QAAQ,CAACO,GAAG,CAACZ,CAAC,CAACC,EAAE,CAAC,cAAAmC,aAAA,cAAAA,aAAA,GAAE;UAACvB,KAAK,EAAC,CAAC;UAACC,IAAI,EAAC;QAAC,CAAC;QAAE,MAAMyB,GAAG,GAACD,IAAI,CAACzB,KAAK,GAAC2B,IAAI,CAACC,KAAK,CAAEH,IAAI,CAACxB,IAAI,GAACwB,IAAI,CAACzB,KAAK,GAAE,GAAG,CAAC,GAAC,CAAC;QAC5H,oBAAQ3B,OAAA;UAAAgC,QAAA,gBAAehC,OAAA;YAAM+B,SAAS,EAAC,YAAY;YAAAC,QAAA,GAAAmB,QAAA,GAAErC,CAAC,CAACI,KAAK,cAAAiC,QAAA,cAAAA,QAAA,GAAE;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAAAtC,OAAA;YAAM+B,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAElB,CAAC,CAACF;UAAK;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrHtC,OAAA;YAAK+B,SAAS,EAAC,KAAK;YAAAC,QAAA,eAAChC,OAAA;cAAK+B,SAAS,EAAC,MAAM;cAACE,KAAK,EAAE;gBAACuB,KAAK,EAAC,GAAGH,GAAG;cAAG;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAAAtC,OAAA;YAAM+B,SAAS,EAAC,WAAW;YAAAC,QAAA,GAAEoB,IAAI,CAACxB,IAAI,EAAC,GAAC,EAACwB,IAAI,CAACzB,KAAK;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvItC,OAAA;YAAQ+B,SAAS,EAAC,MAAM;YAACiB,OAAO,EAAEA,CAAA,KAAIxC,WAAW,CAACM,CAAC,CAACC,EAAE,CAAE;YAACH,KAAK,EAAC,+BAA+B;YAAAoB,QAAA,EAAC;UAAiB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAF1GxB,CAAC,CAACC,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE0G,CAAC;MAClI,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC5B,EAAA,CArBIT,KAAqB;AAAAwD,EAAA,GAArBxD,KAAqB;AAsB3B,eAAeA,KAAK;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}