{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eskew\\\\github\\\\tasktracker\\\\src\\\\pages\\\\Goals.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojiDefaults = [\"🎯\", \"🏋️\", \"📚\", \"💼\", \"💵\", \"🧘\", \"🧠\", \"💡\", \"❤️\", \"🏃\", \"🎵\", \"🎨\", \"🧑‍🍳\"];\nconst Goals = ({\n  goals,\n  setGoals,\n  goalTitle,\n  setGoalTitle,\n  goalEmoji,\n  setGoalEmoji,\n  setGoalPref,\n  tasks\n}) => {\n  _s();\n  const addGoal = () => {\n    const title = goalTitle.trim();\n    if (!title) return;\n    const g = {\n      id: Date.now(),\n      title,\n      emoji: goalEmoji\n    };\n    setGoals([...goals, g]);\n    setGoalTitle(\"\");\n  };\n  const progress = useMemo(() => {\n    const m = new Map();\n    for (const t of tasks) {\n      var _m$get;\n      if (t.goalId == null) continue;\n      const v = (_m$get = m.get(t.goalId)) !== null && _m$get !== void 0 ? _m$get : {\n        total: 0,\n        done: 0\n      };\n      v.total += 1;\n      if (t.completed) v.done += 1;\n      m.set(t.goalId, v);\n    }\n    return m;\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      icon: \"\\uD83C\\uDFAF\",\n      title: \"Goals\",\n      subtitle: \"Connect tasks to bigger outcomes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal-add\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          children: \"Pick a symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-grid\",\n          children: emojiDefaults.map(e => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"emoji-pick\" + (goalEmoji === e ? \" selected\" : \"\"),\n            onClick: () => setGoalEmoji(e),\n            children: e\n          }, e, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"goal-input-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            placeholder: \"Add a new goal (e.g., Stronger body)\",\n            value: goalTitle,\n            onChange: e => setGoalTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: addGoal,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"muted\",\n        style: {\n          marginTop: 8\n        },\n        children: \"No goals yet. Add one, then link tasks to it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"goals\",\n        children: goals.map(g => {\n          var _progress$get, _g$emoji;\n          const prog = (_progress$get = progress.get(g.id)) !== null && _progress$get !== void 0 ? _progress$get : {\n            total: 0,\n            done: 0\n          };\n          const pct = prog.total ? Math.round(prog.done / prog.total * 100) : 0;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"goal-emoji\",\n              children: (_g$emoji = g.emoji) !== null && _g$emoji !== void 0 ? _g$emoji : \"🎯\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"goal-title\",\n              children: g.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fill\",\n                style: {\n                  width: `${pct}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 40\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"goal-stat\",\n              children: [prog.done, \"/\", prog.total]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"pill\",\n              onClick: () => setGoalPref(g.id),\n              title: \"Attach new tasks to this goal\",\n              children: \"Use for new tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, g.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Goals, \"w1+v397wmAOHhnkFt7AtWesxRR4=\");\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useMemo","PageHeader","jsxDEV","_jsxDEV","emojiDefaults","Goals","goals","setGoals","goalTitle","setGoalTitle","goalEmoji","setGoalEmoji","setGoalPref","tasks","_s","addGoal","title","trim","g","id","Date","now","emoji","progress","m","Map","t","_m$get","goalId","v","get","total","done","completed","set","children","icon","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","className","map","e","onClick","placeholder","value","onChange","target","length","style","marginTop","_progress$get","_g$emoji","prog","pct","Math","round","width","_c","$RefreshReg$"],"sources":["C:/Users/eskew/github/tasktracker/src/pages/Goals.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport PageHeader from \"../components/PageHeader\";\n\ntype Priority = \"UI\" | \"UN\" | \"NI\" | \"NN\";\ninterface Task { id:number; text:string; completed:boolean; goalId?:number|null; priority?:Priority; }\ninterface Goal { id:number; title:string; emoji?:string; }\n\ninterface GoalsProps {\n  goals: Goal[]; setGoals: (g: Goal[]) => void;\n  goalTitle: string; setGoalTitle: (v: string) => void;\n  goalEmoji: string; setGoalEmoji: (v: string) => void;\n  setGoalPref: (id: number|null)=>void;\n  tasks: Task[];\n}\n\nconst emojiDefaults = [\"🎯\",\"🏋️\",\"📚\",\"💼\",\"💵\",\"🧘\",\"🧠\",\"💡\",\"❤️\",\"🏃\",\"🎵\",\"🎨\",\"🧑‍🍳\"];\n\nconst Goals: React.FC<GoalsProps> = ({ goals, setGoals, goalTitle, setGoalTitle, goalEmoji, setGoalEmoji, setGoalPref, tasks }) => {\n  const addGoal = () => {\n    const title = goalTitle.trim();\n    if (!title) return;\n    const g: Goal = { id: Date.now(), title, emoji: goalEmoji };\n    setGoals([...goals, g]);\n    setGoalTitle(\"\");\n  };\n\n  const progress = useMemo(() => {\n    const m = new Map<number, { total: number; done: number }>();\n    for (const t of tasks) {\n      if (t.goalId == null) continue;\n      const v = m.get(t.goalId) ?? { total: 0, done: 0 };\n      v.total += 1; if (t.completed) v.done += 1;\n      m.set(t.goalId, v);\n    }\n    return m;\n  }, [tasks]);\n\n  return (\n    <div>\n      <PageHeader icon=\"🎯\" title=\"Goals\" subtitle=\"Connect tasks to bigger outcomes\" />\n      <div className=\"card\">\n        <div className=\"goal-add\">\n          <div className=\"label\">Pick a symbol</div>\n          <div className=\"emoji-grid\">\n            {emojiDefaults.map(e => (\n              <button key={e} className={\"emoji-pick\"+(goalEmoji===e?\" selected\":\"\")} onClick={()=>setGoalEmoji(e)}>{e}</button>\n            ))}\n          </div>\n          <div className=\"goal-input-row\">\n            <input className=\"input\" placeholder=\"Add a new goal (e.g., Stronger body)\" value={goalTitle} onChange={(e)=>setGoalTitle(e.target.value)} />\n            <button className=\"btn\" onClick={addGoal}>Add</button>\n          </div>\n        </div>\n\n        {goals.length === 0 ? (\n          <div className=\"muted\" style={{marginTop:8}}>No goals yet. Add one, then link tasks to it.</div>\n        ) : (\n          <ul className=\"goals\">\n            {goals.map(g => {\n              const prog = progress.get(g.id) ?? { total: 0, done: 0 };\n              const pct = prog.total ? Math.round((prog.done / prog.total) * 100) : 0;\n              return (\n                <li key={g.id}>\n                  <span className=\"goal-emoji\">{g.emoji ?? \"🎯\"}</span>\n                  <span className=\"goal-title\">{g.title}</span>\n                  <div className=\"bar\"><div className=\"fill\" style={{width:`${pct}%`}}/></div>\n                  <span className=\"goal-stat\">{prog.done}/{prog.total}</span>\n                  <button className=\"pill\" onClick={()=>setGoalPref(g.id)} title=\"Attach new tasks to this goal\">Use for new tasks</button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Goals;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}