{"ast":null,"code":"import React from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const labels={UI:\"Urgent + Important\",UN:\"Urgent + Not Important\",NI:\"Not Urgent + Important\",NN:\"Not Urgent + Not Important\"};const quadrants=[\"UI\",\"UN\",\"NI\",\"NN\"];const Matrix=_ref=>{let{tasks,toggleTask,setTaskPriority}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"matrix\",children:quadrants.map(q=>{const items=tasks.filter(t=>{var _t$priority;return((_t$priority=t.priority)!==null&&_t$priority!==void 0?_t$priority:\"NN\")===q;});return/*#__PURE__*/_jsxs(\"div\",{className:\"matrix-cell\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"matrix-title\",children:labels[q]}),/*#__PURE__*/_jsx(\"ul\",{className:\"list\",style:{marginTop:6},children:items.length===0?/*#__PURE__*/_jsx(\"li\",{className:\"item\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text muted\",children:\"No tasks.\"})}):items.map(t=>/*#__PURE__*/_jsxs(\"li\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:t.completed,onChange:()=>toggleTask(t.id),title:\"Toggle complete\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text \".concat(t.completed?\"done\":\"\"),children:t.text}),!t.completed&&/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",gap:6,alignItems:\"center\",marginLeft:\"auto\"},children:quadrants.map(opt=>{var _t$priority2;return/*#__PURE__*/_jsx(\"button\",{className:\"pill \".concat(((_t$priority2=t.priority)!==null&&_t$priority2!==void 0?_t$priority2:\"NN\")===opt&&\"active\"||\"\"),onClick:()=>setTaskPriority(t.id,opt),title:labels[opt],children:opt},opt);})})]},t.id))})]},q);})});};export default Matrix;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","labels","UI","UN","NI","NN","quadrants","Matrix","_ref","tasks","toggleTask","setTaskPriority","className","children","map","q","items","filter","t","_t$priority","priority","style","marginTop","length","type","checked","completed","onChange","id","title","concat","text","display","gap","alignItems","marginLeft","opt","_t$priority2","onClick"],"sources":["C:/Users/eskew/github/tasktracker/src/pages/Matrix.tsx"],"sourcesContent":["import React from \"react\";\ntype Priority=\"UI\"|\"UN\"|\"NI\"|\"NN\";\ninterface Task{ id:number; text:string; completed:boolean; priority?:Priority; }\ninterface Props{ tasks:Task[]; toggleTask:(id:number)=>void; setTaskPriority:(id:number,p:Priority)=>void; }\nconst labels:Record<Priority,string>={UI:\"Urgent + Important\",UN:\"Urgent + Not Important\",NI:\"Not Urgent + Important\",NN:\"Not Urgent + Not Important\"};\nconst quadrants:Priority[]=[\"UI\",\"UN\",\"NI\",\"NN\"];\nconst Matrix:React.FC<Props>=({tasks,toggleTask,setTaskPriority})=>(\n  <div className=\"matrix\">\n    {quadrants.map(q=>{\n      const items=tasks.filter(t=>(t.priority??\"NN\")===q);\n      return (\n        <div key={q} className=\"matrix-cell\">\n          <div className=\"matrix-title\">{labels[q]}</div>\n          <ul className=\"list\" style={{marginTop:6}}>\n            {items.length===0? <li className=\"item\"><span className=\"text muted\">No tasks.</span></li> :\n              items.map(t=>(\n                <li key={t.id} className=\"item\">\n                  <input type=\"checkbox\" checked={t.completed} onChange={()=>toggleTask(t.id)} title=\"Toggle complete\"/>\n                  <span className={`text ${t.completed?\"done\":\"\"}`}>{t.text}</span>\n                  {!t.completed && (\n                    <div style={{display:\"flex\",gap:6,alignItems:\"center\",marginLeft:\"auto\"}}>\n                      {quadrants.map(opt=>(\n                        <button key={opt} className={`pill ${((t.priority??\"NN\")===opt && \"active\")||\"\"}`} onClick={()=>setTaskPriority(t.id,opt)} title={labels[opt]}>{opt}</button>\n                      ))}\n                    </div>\n                  )}\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      );\n    })}\n  </div>\n);\nexport default Matrix;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAI1B,KAAM,CAAAC,MAA8B,CAAC,CAACC,EAAE,CAAC,oBAAoB,CAACC,EAAE,CAAC,wBAAwB,CAACC,EAAE,CAAC,wBAAwB,CAACC,EAAE,CAAC,4BAA4B,CAAC,CACtJ,KAAM,CAAAC,SAAoB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAChD,KAAM,CAAAC,MAAsB,CAACC,IAAA,MAAC,CAACC,KAAK,CAACC,UAAU,CAACC,eAAe,CAAC,CAAAH,IAAA,oBAC9DV,IAAA,QAAKc,SAAS,CAAC,QAAQ,CAAAC,QAAA,CACpBP,SAAS,CAACQ,GAAG,CAACC,CAAC,EAAE,CAChB,KAAM,CAAAC,KAAK,CAACP,KAAK,CAACQ,MAAM,CAACC,CAAC,OAAAC,WAAA,OAAE,EAAAA,WAAA,CAACD,CAAC,CAACE,QAAQ,UAAAD,WAAA,UAAAA,WAAA,CAAE,IAAI,IAAIJ,CAAC,GAAC,CACnD,mBACEf,KAAA,QAAaY,SAAS,CAAC,aAAa,CAAAC,QAAA,eAClCf,IAAA,QAAKc,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEZ,MAAM,CAACc,CAAC,CAAC,CAAM,CAAC,cAC/CjB,IAAA,OAAIc,SAAS,CAAC,MAAM,CAACS,KAAK,CAAE,CAACC,SAAS,CAAC,CAAC,CAAE,CAAAT,QAAA,CACvCG,KAAK,CAACO,MAAM,GAAG,CAAC,cAAEzB,IAAA,OAAIc,SAAS,CAAC,MAAM,CAAAC,QAAA,cAACf,IAAA,SAAMc,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,CAAI,CAAC,CACxFG,KAAK,CAACF,GAAG,CAACI,CAAC,eACTlB,KAAA,OAAeY,SAAS,CAAC,MAAM,CAAAC,QAAA,eAC7Bf,IAAA,UAAO0B,IAAI,CAAC,UAAU,CAACC,OAAO,CAAEP,CAAC,CAACQ,SAAU,CAACC,QAAQ,CAAEA,CAAA,GAAIjB,UAAU,CAACQ,CAAC,CAACU,EAAE,CAAE,CAACC,KAAK,CAAC,iBAAiB,CAAC,CAAC,cACtG/B,IAAA,SAAMc,SAAS,SAAAkB,MAAA,CAAUZ,CAAC,CAACQ,SAAS,CAAC,MAAM,CAAC,EAAE,CAAG,CAAAb,QAAA,CAAEK,CAAC,CAACa,IAAI,CAAO,CAAC,CAChE,CAACb,CAAC,CAACQ,SAAS,eACX5B,IAAA,QAAKuB,KAAK,CAAE,CAACW,OAAO,CAAC,MAAM,CAACC,GAAG,CAAC,CAAC,CAACC,UAAU,CAAC,QAAQ,CAACC,UAAU,CAAC,MAAM,CAAE,CAAAtB,QAAA,CACtEP,SAAS,CAACQ,GAAG,CAACsB,GAAG,OAAAC,YAAA,oBAChBvC,IAAA,WAAkBc,SAAS,SAAAkB,MAAA,CAAW,EAAAO,YAAA,CAACnB,CAAC,CAACE,QAAQ,UAAAiB,YAAA,UAAAA,YAAA,CAAE,IAAI,IAAID,GAAG,EAAI,QAAQ,EAAG,EAAE,CAAG,CAACE,OAAO,CAAEA,CAAA,GAAI3B,eAAe,CAACO,CAAC,CAACU,EAAE,CAACQ,GAAG,CAAE,CAACP,KAAK,CAAE5B,MAAM,CAACmC,GAAG,CAAE,CAAAvB,QAAA,CAAEuB,GAAG,EAAtIA,GAA+I,CAAC,EAC9J,CAAC,CACC,CACN,GATMlB,CAAC,CAACU,EAUP,CACL,CAAC,CAEF,CAAC,GAlBGb,CAmBL,CAAC,CAEV,CAAC,CAAC,CACC,CAAC,EACP,CACD,cAAe,CAAAR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}